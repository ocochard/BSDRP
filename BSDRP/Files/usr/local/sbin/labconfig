#!/bin/sh
# Helper script for building Maximum BSDRP features validation lab
# https://bsdrp.net/documentation/examples/maximum_bsdrp_features_lab
set -eu

usage () {
	echo "Helper script for configuring BSDRP regression feature lab"
	echo "DO NOT USE THIS SCRIPT ON OTHER ROUTERS: IT WILL ERASE YOUR CONFIGURATION"
	echo "Usage:"
	echo "$0 lab_type_vm-number"
	echo "Example:"
	echo "$0 full_vm1        for configuring VM1 of lab Full"
	echo "$0 frr_vm3         for configuring VM3 of lab FRR"
	echo "Lab list:"
	echo "-full: https://bsdrp.net/documentation/examples/maximum_bsdrp_features_lab"
	echo "-frr: https://bsdrp.net/documentation/examples/simple_bgp-rip-ospf_lab"
	echo "-frr_jails: same as previous but with jails"
	echo "-bird_jails: https://bsdrp.net/documentation/examples/simple_bgp-rip-ospf_lab_with_bird"
	echo "-vpn: https://bsdrp.net/documentation/examples/gre_ipsec_and_openvpn"
	echo "-freevrrpd: https://bsdrp.net/documentation/examples/simple_vrrp_lab"
	echo "-bgp: https://bsdrp.net/documentation/examples/bgp_route_reflector_and_confederation_using_quagga_and_bird"
	echo "-jailpf: https://bsdrp.net/documentation/examples/multi-tenant_ha_pf_firewalls"
	echo "-graphpath: https://bsdrp.net/documentation/examples/graphpath"
	echo "-mlppp: https://bsdrp.net/documentation/examples/aggregating_multiple_isp_links"
	echo "-mlvpn: https://bsdrp.net/documentation/examples/aggregating_multiple_isp_links_with_mlvpn"
	echo "-ecmp: https://bsdrp.net/documentation/examples/ecmp"
	echo "-fairshape: https://bsdrp.net/documentation/examples/fair_traffic_shaping_per_ip_with_ipfw-dummynet"
	exit 1
}

### Full (maximum) features labs ###

full_vm1 () {
sysrc hostname=R1 \
	gateway_enable=NO \
	ipv6_gateway_enable=NO \
	ifconfig_em0=up \
	cloned_interfaces=lagg0 \
	ifconfig_lagg0="laggproto loadbalance laggport em0 SYNCDHCP" \
	ifconfig_lagg0_ipv6="inet6 accept_rtadv" \
	rtsold_enable=yes \
	sshd_enable=yes
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
config save
hostname R1
service routing restart || true
service netif restart
service rtsold start
service sshd start
echo "VM1 configured"
}

full_vm2 () {
sysrc hostname=R2 \
	rtadvd_enable=YES \
	rtadvd_interfaces="em0" \
	vlans_em1="23" \
	ifconfig_em1="up mtu 1528" \
	ifconfig_em0="inet 10.0.12.2/24" \
	ifconfig_em0_alias0="inet 10.0.12.254/32 vhid 1 advskew 100 carpver 3"
	ifconfig_em0_ipv6="inet6 2001:db8:12::2 prefixlen 64" \
	ifconfig_em1_23="inet 10.0.23.2/24" \
	ifconfig_em1_23_ipv6="inet6 2001:db8:23::2 prefixlen 64" \
	cloned_interfaces="lo1" \
	ifconfig_lo1="inet 10.0.0.2/32" \
	ifconfig_lo1_ipv6="inet6 2001:db8::2 prefixlen 128" \
	frr_enable=YES \
	dhcprelya_enable=YES \
	dhcprelya_servers="10.0.45.5" \
	dhcprelya_ifaces=em0 \
	mpd_enable=YES \
	mpd_flags="-b -s ppp" \
	ipsec_enable=YES \
	ipsec_file="/etc/ipsec.conf" \
	pimd_enable=YES \
	kld_list+=" carp"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /usr/local/etc/mpd5/if-up.sh <<EOF
#!/bin/sh
set -e
logger "\$0 called with parameters: \$@"
if [ "\$2" == "inet6" ]; then
        if ifconfig \$1 \$2 2001:db8:24::2; then
        logger "\$0: \$cmd successfull"
        return 0
        else
        logger "\$0: \$cmd failed"
        return 1
        fi
else
        return 0
fi
EOF

chmod +x /usr/local/etc/mpd5/if-up.sh

cat > /usr/local/etc/mpd5/mpd.conf <<EOF
# Configuring a server PPTP VPN with tunnels to R4
default:
        load vpnipv4
        load vpnipv6
vpnipv4:
        # Create bundle called vpnipv4
        create bundle static vpnipv4
        # IP of client and server, on another subnet for avoiding problems
        set ipcp ranges 10.4.24.2/32 10.4.24.4/32
        # Remote LAN subnet: Learned by routing protocol
        #set iface route 10.0.45.0/24
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv4 pptp
        # Attach this link to vpnipv4
        set link action bundle vpnipv4
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname "VpnLogin4"
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial -1
        # Local WAN IP addresse
        set pptp self 10.0.0.2
        # Remote WAN IP addresse
        set pptp peer 10.0.0.4
        # Allow incoming call
        set link enable incoming

vpnipv6:
        # Create bundle called vpnipv6
        create bundle static vpnipv6
        # Don't know how to disable IPv4 ipcp
        set ipcp ranges 10.6.24.2/32 10.6.24.4/32
        # Enable IPv6
        set bundle enable ipv6cp
        # Remote LAN subnet: Learned by routing protocol
        #set iface route 2001:db8:45::/64
        # Need to statically set inet6 address
        set iface up-script /usr/local/etc/mpd5/if-up.sh
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv6 pptp
        # Attach this link to vpnipv6
        set link action bundle vpnipv6
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname "VpnLogin6"
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial -1
        # Local WAN IP addresse
        set pptp self 2001:db8::2
        # Remote WAN IP addresse
        set pptp peer 2001:db8::4
        # Allow incoming call
        set link enable incoming
EOF

cat > /usr/local/etc/mpd5/mpd.secret <<EOF
VpnLogin4       VpnPassword4
VpnLogin6       VpnPassword6
EOF

cat > /etc/ipsec.conf <<EOF
flush ;
add 10.0.23.2 10.0.23.3 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 10.0.23.3 10.0.23.2 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::2 2001:db8:23::3 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:23::3 2001:db8:23::2 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF

cat > /usr/local/etc/frr/frr.conf <<EOF
frr version 9.1
frr defaults traditional
hostname R2
log syslog
!
interface ng0
 ip ospf message-digest-key 1 md5 superpass
 ip ospf network point-to-point
 ipv6 ospf6 passive
exit
!
interface em0
 ipv6 ospf6 area 0.0.0.0
 ipv6 ospf6 passive
exit
!
interface vtnet0
 ipv6 ospf6 area 0.0.0.0
 ipv6 ospf6 passive
exit
!
interface ng1
 ipv6 ospf6 network point-to-point
 ipv6 ospf6 area 0.0.0.0
exit
!
router-id 0.0.0.2
!
router bgp 100
 neighbor 10.0.23.3 remote-as 100
 neighbor 10.0.23.3 password abigpassword
 neighbor 2001:db8:23::3 remote-as 100
 neighbor 2001:db8:23::3 password abigpassword
 !
 address-family ipv4 unicast
  network 10.0.0.2/32
  neighbor 10.0.23.3 soft-reconfiguration inbound
  no neighbor 2001:db8:23::3 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8::2/128
  neighbor 2001:db8:23::3 activate
  neighbor 2001:db8:23::3 soft-reconfiguration inbound
 exit-address-family
exit
!
router ospf
 ospf router-id 0.0.0.2
 network 10.0.12.0/24 area 0.0.0.0
 network 10.4.24.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
exit
!
router ospf6
exit
!
bfd
exit
!
EOF

config save
hostname R2
service netif restart
service ipsec start
service rtadvd start
service freevrrpd start
service frr start
service dhcprelya start
service mpd5 start
service pimd start
echo "VM2 configured"
}

full_vm3 () {
sysrc hostname=R3 \
	vlans_em1="23" \
	ifconfig_em1="up mtu 1528" \
	ifconfig_em1_23="inet 10.0.23.3/24" \
	ifconfig_em1_23_ipv6="inet6 2001:db8:23::3 prefixlen 64" \
	ifconfig_em2="inet 10.0.34.3/24 mtu 1528" \
	ifconfig_em2_ipv6="inet6 2001:db8:34::3 prefixlen 64" \
	bird_enable=YES \
	pf_enable=YES \
	pf_rules="/etc/pf.conf"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /etc/pf.conf <<EOF
#Variables definitions
#TO_R2_if = "{" vtnet1.23 em1.23 "}"
#TO_R4_if = "{" vtnet2 em2 "}"
#R2 = "10.0.0.2/32"
#R4 = "10.0.0.4/32"

## ALTQ rules
# Queue outgoing from \$TO_R4_if (R2 => R4)
# Rate-limit inet 4 VPN traffic to 10Mb
#altq on \$TO_R4_if hfsc bandwidth 100Mb queue { VPN4_TO_R4, OTHER_TO_R4 }
#queue VPN4_TO_R4 bandwidth 10Mb hfsc(upperlimit 10Mb)
#queue OTHER_TO_R4 bandwidth 90Mb hfsc(default)

# Queue for outgoing traffic from \$TO_R2_if (R4 => R2)
#altq on \$TO_R2_if hfsc bandwidth 100Mb queue { VPN4_TO_R2, OTHER_TO_R2 }
#queue VPN4_TO_R2 bandwidth 10Mb hfsc(upperlimit 10Mb)
#queue OTHER_TO_R2 bandwidth 90Mb hfsc(default)

## PF rules

# R2 => R4
# Shapping works on outgoing traffic only, but need to 'mark' traffic
# entering the interface for putting returning traffic in the good queue
#pass in quick on \$TO_R2_if proto gre from \$R2 to \$R4 queue VPN4_TO_R2
# Apply ALTQ to traffic that get out from \$TO_R4_if
#pass out quick on \$TO_R4_if proto gre from \$R2 to \$R4 queue VPN4_TO_R4

# PF rules R4 => R2
#pass in quick on \$TO_R4_if proto gre from \$R4 to \$R2 queue VPN4_TO_R4
#pass out quick on \$TO_R2_if proto gre from \$R4 to \$R2 queue VPN4_TO_R2

# ALTQ is disabled since BSDRP 1.81 (too much performance impact)
pass all
EOF

cat > /usr/local/etc/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 0.0.0.3;

# Sync bird routing table with kernel
protocol kernel kernel4 {
    ipv4 {
        export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

# Include device route (warning, a device route is a /32)
protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol rip R4inet4 {
    interface "vtnet2","em2" {
        version 2;
    };
    ipv4 {
         export all;
    };
}

protocol rip ng R4inet6 {
    interface "vtnet2","em2" ;
    ipv6 {
        export all;
    };
}

protocol bgp R2inet4 {
    local as 100;
    # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
    # Otherwise it will use the wrong 0.0.0.0 IP as source
    source address 10.0.23.3;
    neighbor 10.0.23.2 as 100;
    password "abigpassword";
    ipv4 {
        import all;
        export all;
    };
}

protocol bgp R2inet6 {
    local as 100;
    # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
    # Otherwise it will use the wrong :: IP as source
    source address 2001:db8:23::3;
    neighbor 2001:db8:23::2 as 100;
    password "abigpassword";
    ipv6 {
        import all;
        export all;
    };
}
EOF

config save
hostname R3
service netif restart
service pf start
service bird start
echo "VM3 configured"
}

full_vm4 () {
sysrc hostname=R4 \
	ifconfig_em3="inet 10.0.45.4/24" \
	ifconfig_em3_ipv6="inet6 2001:db8:45::4 prefixlen 64" \
	ifconfig_em2="10.0.34.4/24 mtu 1528" \
	ifconfig_em2_ipv6="inet6 2001:db8:34::4 prefixlen 64" \
	cloned_interfaces="lo1" \
	ifconfig_lo1="inet 10.0.0.4/32" \
	ifconfig_lo1_ipv6="inet6 2001:db8::4 prefixlen 128" \
	frr_enable=YES \
	mpd_enable=YES \
	mpd_flags="-b -s ppp" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules" \
	ipfw_netflow_enable=YES \
	ipfw_netflow_ip=10.0.45.5 \
	ipfw_netflow_port=2055 \
	ipfw_netflow_version=9 \
	pimd_enable=YES
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf

cat > /usr/local/etc/frr/frr.conf <<EOF
frr version 9.1
frr defaults traditional
hostname R4
log syslog
!
interface em3
 ip router isis BSDRP
 ip ospf passive
 ipv6 ospf6 passive
 ipv6 ospf6 area 0.0.0.0
 ipv6 router isis BSDRP
exit
!
interface ng0
 ip ospf message-digest-key 1 md5 superpass
 ip ospf network point-to-point
 ipv6 ospf6 passive
exit
!
interface ng1
 ipv6 ospf6 network point-to-point
 ipv6 ospf6 area 0.0.0.0
exit
!
!
interface vtnet3
 ip router isis BSDRP
 ip ospf passive
 ipv6 ospf6 passive
 ipv6 ospf6 area 0.0.0.0
ipv6 router isis BSDRP
 exit
!
router-id 0.0.0.4
!
router rip
 network lo1
 network em2
 network vtnet2
 version 2
exit
!
router ripng
 network lo1
 network em2
 network vtnet2
exit
!
router ospf
 ospf router-id 0.0.0.4
 redistribute isis
 network 10.0.4.0/24 area 0.0.0.0
 network 10.0.45.0/24 area 0.0.0.0
 network 10.4.24.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
exit
!
router ospf6
 redistribute isis
exit
!
router isis BSDRP
 is-type level-1-2
 net 49.0001.1720.1600.4004.00
 redistribute ipv4 ospf level-1
 redistribute ipv4 connected level-1
 redistribute ipv6 ospf6 level-1
 redistribute ipv6 connected level-1
exit
!
bfd
exit
!
EOF

cat > /usr/local/etc/mpd5/if-up.sh <<EOF
#!/bin/sh
set -e
logger "\$0 called with parameters: \$@"
if [ "\$2" == "inet6" ]; then
        if ifconfig \$1 \$2 2001:db8:24::4; then
        logger "\$0: \$cmd successfull"
        return 0
        else
        logger "\$0: \$cmd failed"
        return 1
        fi
else
        return 0
fi
EOF

chmod +x /usr/local/etc/mpd5/if-up.sh

cat > /usr/local/etc/mpd5/mpd.conf <<EOF
default:
        load vpnipv4
        load vpnipv6
vpnipv4:
        # Create bundle called vpnipv4
        create bundle static vpnipv4
        # Getting IP from the server
        set ipcp ranges 0.0.0.0/0
        # Remote LAN subnet: Learned by ISIS
        #set iface route 10.0.12.0/24
        # Enable Microsoft Point-to-Point encryption (MPPE)
        set bundle enable compression
        set ccp yes mppc
        set mppc yes e40
        set mppc yes e128
        set bundle enable crypt-reqd
        set mppc yes stateless
        # Create a static pptp link called lvpnipv4
        create link static lvpnipv4 pptp
        # Attach this link to vpnipv4
        set link action bundle vpnipv4
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname VpnLogin4
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial 0
        # Local WAN IP addresse
        set pptp self 10.0.0.4
        # Remote WAN IP addresse
        set pptp peer 10.0.0.2
        # Open (initiate) the link to the server
        open
vpnipv6:
        # Create bundle called vpnipv6
        create bundle static vpnipv6
        # Getting IP from the server
        set ipcp ranges 0.0.0.0/0
        # Enable IPv6
        set bundle enable ipv6cp
        # Remote LAN subnet: Learned by ISIS
        #set iface route 2001:db8:12::/64
        # Need to statically configure inet6 adress
        set iface up-script /usr/local/etc/mpd5/if-up.sh
        # Create a static pptp link called lvpnipv6
        create link static lvpnipv6 pptp
        # Attach this link to vpnipv6
        set link action bundle vpnipv6
        # Set somes link settings
        set link no pap
        set link yes chap
        set auth authname VpnLogin6
        # Reduce the size of the outgoing packet for avoiding fragmentation
        set link mtu 1460
        set link keep-alive 10 75
        # max-redial:
        # Server side, need to be "-1"
        # Client side, need to be positive (0 for allways)
        set link max-redial 0
        # Local WAN IP addresse
        set pptp self 2001:db8::4
        # Remote WAN IP addresse
        set pptp peer 2001:db8::2
        # Open (initiate) the link to the server
        open
EOF

cat > /usr/local/etc/mpd5/mpd.secret <<EOF
VpnLogin4       VpnPassword4
VpnLogin6       VpnPassword6
EOF

echo "# IPFW we need to let it to pass IPv6 Unknown Extension Header for IPv6 PPTP" >> /etc/sysctl.conf
echo "net.inet6.ip6.fw.deny_unknown_exthdrs=0" >> /etc/sysctl.conf

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet

# Flush out the list before we begin.
\${fwcmd} -f flush
# Create hard-limited pipes: One for each direction
\${fwcmd} pipe 60 config bw 20Mbit/s
\${fwcmd} pipe 61 config bw 20Mbit/s
\${fwcmd} pipe 40 config bw 10Mbit/s
\${fwcmd} pipe 41 config bw 10Mbit/s
# Put PPTP Traffic into pipes
\${fwcmd} add pipe 40 all from 10.0.0.4 to 10.0.0.2 out via any
\${fwcmd} add pipe 41 all from 10.0.0.2 to 10.0.0.4 in via any
\${fwcmd} add pipe 60 all from 2001:db8::4 to 2001:db8::2 out via any
\${fwcmd} add pipe 61 all from 2001:db8::2 to 2001:db8::4 in via any
# We don't want to block traffic, only shape some
\${fwcmd} add allow ip from any to any
EOF

config save
hostname R4
service netif restart
service frr start
service mpd5 start
service ipfw start
service sysctl reload
service ipfw_netflow start
service pimd start
echo "VM4 configured"
}

full_vm5 () {

sysrc hostname=R5 \
	ifconfig_em3=up \
	cloned_interfaces=epair0 \
	ifconfig_epair0a=up \
	kld_list+=" if_lagg carp"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
cat > /etc/devfs.rules <<EOF
[devfsrules_jailpf=4]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path 'bpf*' unhide
EOF

hostname R5
service devfs restart
service netif restart
service kld start
if ifconfig -l | grep -q vtnet; then
	tenant -c -j jail5 -i vtnet3,epair0a
else
	tenant -c -j jail5 -i em3,epair0a
fi
tenant -c -j jail6 -i epair0b
sysrc -f /etc/jails/jail5/rc.conf hostname=jail5 \
	ifconfig_em3="inet 10.0.45.5/24" \
	ifconfig_em3_ipv6="inet6 2001:db8:45::5 prefixlen 64" \
	ifconfig_epair0a="inet 10.0.56.5/24" \
	ifconfig_epair0a_ipv6="inet6 2001:db8:56::5 prefixlen 64" \
	ifconfig_epair0a_alias0="inet 10.0.56.254/32 vhid 1 pass testpass" \
	ifconfig_epair0a_alias1="inet6 2001:db8:56::fe prefixlen 128 vhid 1 pass testpass" \
	rtadvd_enable=YES \
	rtadvd_interfaces=epair0a \
	dhcpd_enable=YES \
	dhcpd_flags="-q" \
	dhcpd_conf="/usr/local/etc/dhcpd.conf" \
	frr_enable=YES \
	nfacctd_enable=YES \
	pimd_enable=YES
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/jails/jail5/rc.conf
mkdir -p /etc/jails/jail5/local/frr
cat > /etc/jails/jail5/local/dhcpd.conf <<EOF
option domain-name "bsdrp.net";
default-lease-time 600;
max-lease-time 7200;
ddns-update-style none;
#Declare useless network
subnet 10.0.45.0 netmask 255.255.255.0 {
}

#Declare R1 LAN and gateway
subnet 10.0.12.0 netmask 255.255.255.0 {
  range 10.0.12.1 10.0.12.1;
  option routers 10.0.12.254;
}
#Declare R6 subnet and gateway
subnet 10.0.56.0 netmask 255.255.255.0 {
  range 10.0.56.6 10.0.56.6;
  option routers 10.0.56.254;
}
EOF

cat > /etc/jails/jail5/local/frr/frr.conf <<EOF
frr version 7.0
frr defaults traditional
hostname jail5
log syslog
!
interface em3
 ip router isis BSDRP
 ipv6 router isis BSDRP
!
interface epair0a
 ip router isis BSDRP
 ipv6 router isis BSDRP
 isis passive
!
interface vtnet3
 ip router isis BSDRP
 ipv6 router isis BSDRP
!
router isis BSDRP
 is-type level-1-2
 net 49.0001.1720.1600.5005.00
!
line vty
!
bfd
!
EOF

ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/jails/jail5/local/frr/frr.conf
chown frr:frr /etc/jails/jail5/local/frr

cat > /etc/jails/jail5/local/nfacctd.conf<<EOF
daemonize: true
syslog: daemon
!
! interested in in and outbound traffic
aggregate: src_host,dst_host
nfacctd_ip: 10.0.45.5
nfacctd_port: 2055
aggregate[ip]: src_host, dst_host, timestamp_start, timestamp_end, src_port, dst_port, proto, src_as, dst_as, peer_src_ip
plugins: print[ip]
print_output: csv
print_refresh_time: 300
print_history: 5m
print_output_file[ip]: /tmp/file-%Y%m%d-%H%M.txt
print_history_roundoff: m
print_output_file_append: true
files_umask: 022
EOF

sysrc -f /etc/jails/jail6/rc.conf hostname=jail6 \
	ifconfig_epair0b="up" \
	cloned_interfaces="lagg0" \
	ifconfig_lagg0="laggproto failover laggport epair0b SYNCDHCP" \
	ifconfig_lagg0_ipv6="inet6 accept_rtadv" \
	rtsold_enable=YES \
	bsnmpd_enable=YES \
	gateway_enable=NO \
	ipv6_gateway_enable=NO
service jail start
echo "VM5 (including jail5 and jail6) configured"
}

### Bird lab

bird_jails() {
sysrc hostname=host \
  cloned_interfaces="epair0 epair1 epair2 epair3 epair4" \
  kld_list="ipsec"
cat > /etc/devfs.rules <<EOF
[devfsrules_jailbpf=4]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path 'bpf*' unhide
EOF
service devfs restart
service netif restart
service hostname restart
service kld start
tenant -c -j jail1 -i epair0a
tenant -c -j jail2 -i epair0b,epair1a
tenant -c -j jail3 -i epair1b,epair2a
tenant -c -j jail4 -i epair2b,epair3a
tenant -c -j jail5 -i epair3b,epair4a
tenant -c -j jail6 -i epair4b

for i in $(jot 6); do
	mkdir -p /etc/jails/jail$i/local
done

cat > /etc/jails/jail1/rc.conf <<EOF
hostname="jail1"
gateway_enable=YES
ipv6_gateway_enable=YES
cloned_interfaces=lo1
ifconfig_lo1="inet 192.168.10.1/24"
ifconfig_lo1_ipv6="inet6 2001:db8:10::1/64"
ifconfig_epair0a="inet 192.168.12.1/24"
ifconfig_epair0a_ipv6="inet6 2001:db8:12::1/64"
bird_enable=yes
EOF

cat > /etc/jails/jail2/rc.conf <<EOF
hostname="jail2"
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair0b="inet 192.168.12.2/24"
ifconfig_epair0b_ipv6="inet6 2001:db8:12::2/64"
ifconfig_epair1a="inet 192.168.23.2/24"
ifconfig_epair1a_ipv6="inet6 2001:db8:23::2/64"
bird_enable=yes
EOF

cat > /etc/jails/jail3/rc.conf <<EOF
hostname="jail3"
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair1b="inet 192.168.23.3/24"
ifconfig_epair1b_ipv6="inet6 2001:db8:23::3/64"
ifconfig_epair2a="inet 192.168.34.3/24"
ifconfig_epair2a_ipv6="inet6 2001:db8:34::3/64"
bird_enable=yes
EOF

cat > /etc/jails/jail4/rc.conf <<EOF
hostname="jail4"
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair2b="inet 192.168.34.4/24"
ifconfig_epair2b_ipv6="inet6 2001:db8:34::4/64"
ifconfig_epair3a="inet 192.168.45.4/24"
ifconfig_epair3a_ipv6="inet6 2001:db8:45::4/64"
bird_enable=yes
EOF

cat > /etc/jails/jail5/rc.conf <<EOF
hostname="jail5"
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair3b="inet 192.168.45.5/24"
ifconfig_epair3b_ipv6="inet6 2001:db8:45::5/64"
ifconfig_epair4a="inet 192.168.56.5/24"
ifconfig_epair4a_ipv6="inet6 2001:db8:56::5/64"
bird_enable=yes
EOF

cat > /etc/jails/jail6/rc.conf <<EOF
hostname="jail6"
gateway_enable=YES
ipv6_gateway_enable=YES
cloned_interfaces=lo1
ifconfig_epair4b="inet 192.168.56.6/24"
ifconfig_epair4b_ipv6="inet6 2001:db8:56::6/64"
ifconfig_lo1="inet 192.168.60.6/24"
ifconfig_lo1_ipv6="inet6 2001:db8:60::6/64"
bird_enable=yes
EOF

cat > /etc/jails/jail1/local/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 192.168.10.1;

# Sync bird routing table with kernel
protocol kernel kernel4 {
	ipv4 {
		export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bgp bgp4 {
        local as 12;
        # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
        # Otherwise it will use the wrong 0.0.0.0 IP as source
        source address 192.168.12.1;
        neighbor 192.168.12.2 as 12;
        password "abigpassword";
        ipv4 {
            import all;
            export all;
        };
}

protocol bgp bgp6 {
        local as 12;
        # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
        # Otherwise it will use the wrong :: IP as source
        source address 2001:db8:12::1;
        neighbor 2001:db8:12::2 as 12;
        password "abigpassword";
        ipv6 {
            import all;
            export all;
        };
}

protocol bfd {}
EOF

cat > /etc/jails/jail2/local/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 192.168.10.2;

# Sync bird routing table with kernel
protocol kernel kernel4 {
	ipv4 {
		export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bgp bgp4 {
        local as 12;
        # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
        # Otherwise it will use the wrong 0.0.0.0 IP as source
        source address 192.168.12.2;
        neighbor 192.168.12.1 as 12;
        password "abigpassword";
        ipv4 {
            import all;
            export all;
			next hop self;
        };
}

protocol bgp bgp6 {
        local as 12;
        # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
        # Otherwise it will use the wrong :: IP as source
        source address 2001:db8:12::2;
        neighbor 2001:db8:12::1 as 12;
        password "abigpassword";
        ipv6 {
            import all;
            export all;
			next hop self;
        };
}

protocol bfd {}

protocol rip rip4 {
  ipv4 { import all; export all;};
  interface "epair1a" {};
}

protocol rip ng rip6 {
  ipv6 { import all; export all;};
  interface "epair1a" {};
}
EOF

cat > /etc/jails/jail3/local/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 192.168.10.3;

# Sync bird routing table with kernel
protocol kernel kernel4 {
	ipv4 {
		export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bfd {}

protocol rip rip4 {
  ipv4 { import all; export all;};
  interface "epair1b" {};
}

protocol rip ng rip6 {
  ipv6 { import all; export all;};
  interface "epair1b" {};
}

protocol ospf v2 ospf4 {
  ipv4 { import all; export all;};
  area 0 {
    interface "epair2a" {};
    };
}

protocol ospf v3 ospf6 {
  ipv6 { import all; export all;};
  area 0 {
    interface "epair2a" {};
    };
}
EOF

cat > /etc/jails/jail4/local/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 192.168.10.4;

# Sync bird routing table with kernel
protocol kernel kernel4 {
	ipv4 {
		export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bfd {}

protocol ospf v2 ospf4 {
  ipv4 { import all; export all;};
  area 0 {
    interface "epair2b" {};
    };
}

protocol ospf v3 ospf6 {
  ipv6 { import all; export all;};
  area 0 {
    interface "epair2b" {};
    };
}

protocol babel {
  interface "epair3a" { type wired; };
  ipv4 { import all; export all;};
  ipv6 { import all; export all;};
}
EOF

cat > /etc/jails/jail5/local/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 192.168.10.5;

# Sync bird routing table with kernel
protocol kernel kernel4 {
	ipv4 {
		export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol babel {
  interface "epair3b" { type wired; };
  ipv4 { import all; export all;};
  ipv6 { import all; export all;};
}

protocol static static4 {
    ipv4;
    route 192.168.60.0/24 via 192.168.56.6;
}

protocol static static6 {
    ipv6;
    route 2001:db8:60::/64 via 2001:db8:56::6;
}
EOF

cat > /etc/jails/jail6/local/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 192.168.10.6;

# Sync bird routing table with kernel
protocol kernel kernel4 {
	ipv4 {
		export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol static static4 {
		ipv4;
        route 0.0.0.0/0 via 192.168.56.5;
}
protocol static static6 {
		ipv6;
        route ::/0 via 2001:db8:56::5;
}

EOF

service jail start
echo "All jails are configured and started"

}
### FRR lab

frr_jails () {
sysrc hostname=host \
  cloned_interfaces="epair0 epair1 epair2 epair3 epair4 epair5" \
  kld_list="ipsec"
cat > /etc/devfs.rules <<EOF
[devfsrules_jailbpf=4]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path 'bpf*' unhide
EOF
service devfs restart
service netif restart
service hostname restart
service kld start
tenant -c -j jail1 -i epair0a
tenant -c -j jail2 -i epair0b,epair1a
tenant -c -j jail3 -i epair1b,epair2a
tenant -c -j jail4 -i epair2b,epair3a
tenant -c -j jail5 -i epair3b,epair4a
tenant -c -j jail6 -i epair4b,epair5a
tenant -c -j jail7 -i epair5b

for i in $(jot 7); do
	mkdir -p /etc/jails/jail$i/local/frr
done

sysrc -f /etc/jails/jail1/rc.conf hostname=jail1 \
  cloned_interfaces=lo1 \
  ipsec_enable=YES \
  ipsec_file="/etc/ipsec.conf" \
  frr_daemons="mgmtd zebra bgpd bfdd" \
  frr_enable=yes

cat <<EOF > /etc/jails/jail1/ipsec.conf
flush ;
add 192.168.12.1 192.168.12.2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 192.168.12.2 192.168.12.1 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::1 2001:db8:12::2 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::2 2001:db8:12::1 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF

cat > /etc/jails/jail1/local/frr/frr.conf <<EOF
log syslog
!
interface lo1
 ip address 192.168.10.1/24
 ipv6 address 2001:db8:10::1/64
!
interface epair0a
 ip address 192.168.12.1/24
 ipv6 address 2001:db8:12::1/64
!
router bgp 12
 bgp router-id 192.168.10.1
 neighbor 192.168.12.2 remote-as 12
 neighbor 192.168.12.2 bfd
 neighbor 192.168.12.2 password abigpassword
 neighbor 2001:db8:12::2 remote-as 12
 neighbor 2001:db8:12::2 bfd
 neighbor 2001:db8:12::2 password abigpassword
 !
 address-family ipv4 unicast
  network 192.168.10.0/24
  neighbor 192.168.12.2 soft-reconfiguration inbound
  no neighbor 2001:db8:12::2 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:10::/64
  neighbor 2001:db8:12::2 activate
  neighbor 2001:db8:12::2 soft-reconfiguration inbound
 exit-address-family
!
bfd
 peer 2001:db8:12::2 local-address 2001:db8:12::1
  no shutdown
 !
 peer 192.168.12.2
  no shutdown
 !
!
EOF

sysrc -f /etc/jails/jail2/rc.conf hostname=jail2 \
  ipsec_enable=YES \
  ipsec_file="/etc/ipsec.conf" \
  frr_daemons="mgmtd zebra bgpd bfdd ripd ripngd" \
  frr_enable=yes

cat <<EOF > /etc/jails/jail2/ipsec.conf
flush ;
add 192.168.12.1 192.168.12.2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 192.168.12.2 192.168.12.1 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::1 2001:db8:12::2 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::2 2001:db8:12::1 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF

cat > /etc/jails/jail2/local/frr/frr.conf <<EOF
log syslog
!
key chain rippass
 key 1
  key-string rippassword
 key 1
  key-string rippassword
!
interface epair0b
 ip address 192.168.12.2/24
 ipv6 address 2001:db8:12::2/64
!
interface epair1a
 ip address 192.168.23.2/24
 ip rip authentication key-chain rippass
 ip rip authentication mode md5
 ipv6 address 2001:db8:23::2/64
!
router rip
 network epair1a
 redistribute bgp
 redistribute connected
 version 2
!
router ripng
 network epair1a
 redistribute bgp
 redistribute connected
!
router bgp 12
 bgp router-id 192.168.10.2
 neighbor 192.168.12.1 remote-as 12
 neighbor 192.168.12.1 bfd
 neighbor 192.168.12.1 password abigpassword
 neighbor 2001:db8:12::1 remote-as 12
 neighbor 2001:db8:12::1 bfd
 neighbor 2001:db8:12::1 password abigpassword
 !
 address-family ipv4 unicast
  network 192.168.12.0/24
  redistribute rip
  neighbor 192.168.12.1 next-hop-self
  neighbor 192.168.12.1 soft-reconfiguration inbound
  no neighbor 2001:db8:12::1 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:12::/64
  redistribute ripng
  neighbor 2001:db8:12::1 activate
  neighbor 2001:db8:12::1 soft-reconfiguration inbound
 exit-address-family
!
bfd
 peer 192.168.12.1
  no shutdown
 !
 peer 2001:db8:12::1 local-address 2001:db8:12::2
  no shutdown
 !
!
EOF

sysrc -f /etc/jails/jail3/rc.conf hostname=jail3 \
  frr_daemons="mgmtd zebra ospfd ospf6d ripd ripngd bfdd" \
  frr_enable=yes

cat > /etc/jails/jail3/local/frr/frr.conf <<EOF
log syslog
!
key chain rippass
 key 1
  key-string rippassword
 key 1
  key-string rippassword
!
interface epair1b
 ip address 192.168.23.3/24
 ip rip authentication key-chain rippass
 ip rip authentication mode md5
 ipv6 address 2001:db8:23::3/64
!
interface epair2a
 ip address 192.168.34.3/24
 ip ospf bfd
 ip ospf message-digest-key 1 md5 superpass
 ipv6 address 2001:db8:34::3/64
 ipv6 ospf6 bfd
!
router rip
 network epair1b
 redistribute connected
 redistribute ospf
 version 2
!
router ripng
 network epair1b
 redistribute connected
 redistribute ospf6
!
router ospf
 ospf router-id 3.3.3.3
 redistribute connected
 redistribute rip
 network 192.168.34.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
!
router ospf6
 redistribute connected
 redistribute ripng
 interface epair2a area 0.0.0.0
!
bfd
 peer 2001:db8:34::4 local-address 2001:db8:34::3
  no shutdown
 !
 peer 192.168.34.4
  no shutdown
 !
!
EOF

sysrc -f /etc/jails/jail4/rc.conf hostname=jail4 \
  frr_daemons="mgmtd zebra ospfd ospf6d isisd bfdd" \
  frr_enable=yes

cat > /etc/jails/jail4/local/frr/frr.conf <<EOF
log syslog
!
interface epair2b
 ip address 192.168.34.4/24
 ip ospf bfd
 ip ospf message-digest-key 1 md5 superpass
 ipv6 address 2001:db8:34::4/64
 ipv6 ospf6 bfd
!
interface epair3a
 ip address 192.168.45.4/24
 ip router isis BSDRP
 ipv6 address 2001:db8:45::4/64
 ipv6 router isis BSDRP
 isis circuit-type level-2-only
!
router ospf
 ospf router-id 4.4.4.4
 redistribute connected
 redistribute isis
 network 192.168.34.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
!
router ospf6
 redistribute connected
 redistribute isis
 interface epair2b area 0.0.0.0
!
router isis BSDRP
 is-type level-1-2
 net 49.0000.0000.0004.00
 redistribute ipv4 ospf level-2
 redistribute ipv4 connected level-2
 redistribute ipv6 ospf6 level-2
 redistribute ipv6 connected level-2
!
bfd
 peer 2001:db8:34::3 local-address 2001:db8:34::4
  no shutdown
 !
 peer 192.168.34.3
  no shutdown
 !
!
EOF

sysrc -f /etc/jails/jail5/rc.conf hostname=jail5 \
  frr_daemons="mgmtd zebra babeld isisd" \
  frr_enable=yes

cat > /etc/jails/jail5/local/frr/frr.conf <<EOF
log syslog
!
interface epair3b
 ip address 192.168.45.5/24
 ip router isis BSDRP
 ipv6 address 2001:db8:45::5/64
 ipv6 router isis BSDRP
 isis circuit-type level-2-only
!
interface epair4a
 ip address 192.168.56.5/24
 ip router isis BSDRP
 ipv6 address 2001:db8:56::5/64
 ipv6 router isis BSDRP
 isis circuit-type level-2-only
 isis passive
!
router babel
 network epair3b
 network epair4a
 redistribute ipv4 isis
 redistribute ipv6 isis
!
router isis BSDRP
 is-type level-1-2
 net 49.0000.0000.0005.00
 redistribute ipv4 babel level-2
 redistribute ipv6 babel level-2
!
EOF

sysrc -f /etc/jails/jail6/rc.conf hostname=jail6 \
  frr_daemons="mgmtd zebra babeld staticd" \
  frr_enable=yes

cat > /etc/jails/jail6/local/frr/frr.conf <<EOF
log syslog
!
ip route 192.168.70.0/24 192.168.67.7
ipv6 route 2001:db8:70::/64 2001:db8:67::7
!
interface epair4b
 ip address 192.168.56.6/24
 ipv6 address 2001:db8:56::6/64
!
interface epair5a
 ip address 192.168.67.6/24
 ipv6 address 2001:db8:67::6/64
!
router babel
 network epair4b
 redistribute ipv4 connected
 redistribute ipv4 static
 redistribute ipv6 connected
 redistribute ipv6 static
!
EOF

sysrc -f /etc/jails/jail7/rc.conf hostname=jail7 \
  cloned_interfaces=lo1 \
  frr_daemons="mgmtd zebra staticd" \
  frr_enable=yes

cat > /etc/jails/jail7/local/frr/frr.conf <<EOF
log syslog
!
ip route 0.0.0.0/0 192.168.67.6
ipv6 route ::/0 2001:db8:67::6
!
interface lo1
 ip address 192.168.70.7/24
 ipv6 address 2001:db8:70::7/64
!
interface epair5b
 ip address 192.168.67.7/24
 ipv6 address 2001:db8:67::7/64
!
EOF

for i in $(jot 7); do
	chown -R frr:frr /etc/jails/jail$i/local/frr
done

service jail start
echo "7 jails are configured and started"
}

frr_vm1 () {
sysrc hostname=router1 \
	cloned_interfaces=lo1 \
	ipsec_enable=YES \
	ipsec_file="/etc/ipsec.conf" \
	frr_daemons="mgmtd zebra bgpd bfdd" \
	frr_enable=yes
cat <<EOF > /etc/ipsec.conf
flush ;
add 192.168.12.1 192.168.12.2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 192.168.12.2 192.168.12.1 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::1 2001:db8:12::2 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::2 2001:db8:12::1 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF

cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
interface lo1
 ip address 192.168.10.1/24
 ipv6 address 2001:db8:10::1/64
!
interface vtnet0
 ip address 192.168.12.1/24
 ipv6 address 2001:db8:12::1/64
!
router bgp 12
 bgp router-id 192.168.10.1
 neighbor 192.168.12.2 remote-as 12
 neighbor 192.168.12.2 bfd
 neighbor 192.168.12.2 password abigpassword
 neighbor 2001:db8:12::2 remote-as 12
 neighbor 2001:db8:12::2 bfd
 neighbor 2001:db8:12::2 password abigpassword
 !
 address-family ipv4 unicast
  network 192.168.10.0/24
  neighbor 192.168.12.2 soft-reconfiguration inbound
  no neighbor 2001:db8:12::2 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:10::/64
  neighbor 2001:db8:12::2 activate
  neighbor 2001:db8:12::2 soft-reconfiguration inbound
 exit-address-family
!
bfd
 peer 2001:db8:12::2 local-address 2001:db8:12::1
  no shutdown
 !
 peer 192.168.12.2
  no shutdown
 !
!
EOF
hostname router1
service netif restart
service ipsec start
service frr start
config save
echo "VM1 configured"
}

frr_vm2 () {
sysrc hostname=router2 \
	ipsec_enable=YES \
	ipsec_file="/etc/ipsec.conf" \
	frr_daemons="mgmtd zebra bgpd bfdd ripd ripngd" \
	frr_enable=YES
cat <<EOF > /etc/ipsec.conf
flush ;
add 192.168.12.1 192.168.12.2 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 192.168.12.2 192.168.12.1 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::1 2001:db8:12::2 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:12::2 2001:db8:12::1 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF
cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
key chain rippass
 key 1
  key-string rippassword
 key 1
  key-string rippassword
!
interface vtnet0
 ip address 192.168.12.2/24
 ipv6 address 2001:db8:12::2/64
!
interface vtnet1
 ip address 192.168.23.2/24
 ip rip authentication key-chain rippass
 ip rip authentication mode md5
 ipv6 address 2001:db8:23::2/64
!
router rip
 network vtnet1
 redistribute bgp
 redistribute connected
 version 2
!
router ripng
 network vtnet1
 redistribute bgp
 redistribute connected
!
router bgp 12
 bgp router-id 192.168.10.2
 neighbor 192.168.12.1 remote-as 12
 neighbor 192.168.12.1 bfd
 neighbor 192.168.12.1 password abigpassword
 neighbor 2001:db8:12::1 remote-as 12
 neighbor 2001:db8:12::1 bfd
 neighbor 2001:db8:12::1 password abigpassword
 !
 address-family ipv4 unicast
  network 192.168.12.0/24
  redistribute rip
  neighbor 192.168.12.1 next-hop-self
  neighbor 192.168.12.1 soft-reconfiguration inbound
  no neighbor 2001:db8:12::1 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:12::/64
  redistribute ripng
  neighbor 2001:db8:12::1 activate
  neighbor 2001:db8:12::1 soft-reconfiguration inbound
 exit-address-family
!
bfd
 peer 192.168.12.1
  no shutdown
 !
 peer 2001:db8:12::1 local-address 2001:db8:12::2
  no shutdown
 !
!
EOF

hostname router2
service ipsec start
service frr start
config save
echo "VM2 configured"
}

frr_vm3 () {
sysrc hostname=router3 \
	frr_daemons="mgmtd zebra ospfd ospf6d ripd ripngd bfdd" \
	frr_enable=YES
cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
key chain rippass
 key 1
  key-string rippassword
 key 1
  key-string rippassword
!
interface vtnet1
 ip address 192.168.23.3/24
 ip rip authentication key-chain rippass
 ip rip authentication mode md5
 ipv6 address 2001:db8:23::3/64
!
interface vtnet2
 ip address 192.168.34.3/24
 ip ospf bfd
 ip ospf message-digest-key 1 md5 superpass
 ipv6 address 2001:db8:34::3/64
 ipv6 ospf6 bfd
!
router rip
 network vtnet1
 redistribute connected
 redistribute ospf
 version 2
!
router ripng
 network vtnet1
 redistribute connected
 redistribute ospf6
!
router ospf
 ospf router-id 3.3.3.3
 redistribute connected
 redistribute rip
 network 192.168.34.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
!
router ospf6
 redistribute connected
 redistribute ripng
 interface vtnet2 area 0.0.0.0
!
bfd
 peer 2001:db8:34::4 local-address 2001:db8:34::3
  no shutdown
 !
 peer 192.168.34.4
  no shutdown
 !
!
EOF
hostname router3
service frr start
config save
echo "VM3 configured"
}

frr_vm4 () {
sysrc hostname=router4 \
	frr_daemons="mgmtd zebra ospfd ospf6d isisd bfdd" \
	frr_enable=YES
cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
interface vtnet2
 ip address 192.168.34.4/24
 ip ospf bfd
 ip ospf message-digest-key 1 md5 superpass
 ipv6 address 2001:db8:34::4/64
 ipv6 ospf6 bfd
!
interface vtnet3
 ip address 192.168.45.4/24
 ip router isis BSDRP
 ipv6 address 2001:db8:45::4/64
 ipv6 router isis BSDRP
 isis circuit-type level-2-only
!
router ospf
 ospf router-id 4.4.4.4
 redistribute connected
 redistribute isis
 network 192.168.34.0/24 area 0.0.0.0
 area 0.0.0.0 authentication message-digest
!
router ospf6
 redistribute connected
 redistribute isis
 interface vtnet2 area 0.0.0.0
!
router isis BSDRP
 is-type level-1-2
 net 49.0000.0000.0004.00
 redistribute ipv4 ospf level-2
 redistribute ipv4 connected level-2
 redistribute ipv6 ospf6 level-2
 redistribute ipv6 connected level-2
!
bfd
 peer 2001:db8:34::3 local-address 2001:db8:34::4
  no shutdown
 !
 peer 192.168.34.3
  no shutdown
 !
!
EOF

hostname router4
service frr start
config save
echo "VM4 configured"
}

frr_vm5 () {
sysrc hostname=router5 \
	frr_daemons="mgmtd zebra babeld isisd" \
	frr_enable=YES
cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
interface vtnet3
 ip address 192.168.45.5/24
 ip router isis BSDRP
 ipv6 address 2001:db8:45::5/64
 ipv6 router isis BSDRP
 isis circuit-type level-2-only
!
interface vtnet4
 ip address 192.168.56.5/24
 ip router isis BSDRP
 ipv6 address 2001:db8:56::5/64
 ipv6 router isis BSDRP
 isis circuit-type level-2-only
 isis passive
!
router babel
 network vtnet3
 network vtnet4
 redistribute ipv4 isis
 redistribute ipv6 isis
!
router isis BSDRP
 is-type level-1-2
 net 49.0000.0000.0005.00
 redistribute ipv4 babel level-2
 redistribute ipv6 babel level-2
!
EOF
hostname router5
service netif restart
service frr start
config save
echo "VM5 configured"
}

frr_vm6 () {
sysrc hostname=router6 \
	frr_daemons="mgmtd zebra mgmtd babeld staticd" \
	frr_enable=YES
cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
ip route 192.168.70.0/24 192.168.67.7
ipv6 route 2001:db8:70::/64 2001:db8:67::7
!
interface vtnet4
 ip address 192.168.56.6/24
 ipv6 address 2001:db8:56::6/64
!
interface vtnet5
 ip address 192.168.67.6/24
 ipv6 address 2001:db8:67::6/64
!
router babel
 network vtnet4
 redistribute ipv4 connected
 redistribute ipv4 static
 redistribute ipv6 connected
 redistribute ipv6 static
!
EOF
hostname router6
service netif restart
service frr start
config save
echo "VM6 configured"
}

frr_vm7 () {
sysrc hostname=router7 \
	cloned_interfaces=lo1 \
	frr_daemons="mgmtd zebra mgmtd staticd" \
	frr_enable=YES
cat > /usr/local/etc/frr/frr.conf <<EOF
log syslog
!
ip route 0.0.0.0/0 192.168.67.6
ipv6 route ::/0 2001:db8:67::6
!
interface lo1
 ip address 192.168.70.7/24
 ipv6 address 2001:db8:70::7/64
!
interface vtnet5
 ip address 192.168.67.7/24
 ipv6 address 2001:db8:67::7/64
!
EOF
hostname router7
service netif restart
service frr start
config save
echo "VM7 configured"
}

vpn_vm1 () {
sysrc hostname=VM1 \
	gateway_enable=NO \
	ipv6_gateway_enable=NO \
	ifconfig_em0="inet 10.0.12.1/24" \
	ifconfig_em0_ipv6="inet6 2001:db8:12::1 prefixlen 64" \
	defaultrouter=10.0.12.2 \
	ipv6_defaultrouter=2001:db8:12::2
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
hostname VM1
service netif restart
service routing restart
config save
}

vpn_vm2 () {
sysrc hostname=VM2 \
	ifconfig_em0="inet 10.0.12.2/24" \
	ifconfig_em0_ipv6="inet6 2001:db8:12::2 prefixlen 64" \
	ifconfig_em1="inet 10.0.23.2/24" \
	ifconfig_em1_ipv6="inet6 2001:db8:23::2 prefixlen 64" \
	defaultrouter="10.0.23.3" \
	ipv6_defaultrouter="2001:db8:23::3" \
	sshd_enable=YES
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
cat > /etc/ipsec.conf <<EOF
flush;
spdflush;
spdadd 10.0.12.0/24 10.0.45.0/24 any -P out ipsec esp/tunnel/10.0.23.2-10.0.34.4/require;
spdadd 10.0.45.0/24 10.0.12.0/24 any -P in ipsec esp/tunnel/10.0.34.4-10.0.23.2/require;
add 10.0.23.2 10.0.34.4 esp 0x1000 -E aes-gcm-16 "12345678901234567890";
add 10.0.34.4 10.0.23.2 esp 0x1001 -E aes-gcm-16 "12345678901234567890";
spdadd 2001:db8:12::/64 2001:db8:45::/64 any -P out ipsec esp/tunnel/2001:db8:23::2-2001:db8:34::4/require;
spdadd 2001:db8:45::/64 2001:db8:12::/64 any -P in ipsec esp/tunnel/2001:db8:34::4-2001:db8:23::2/require;
add 2001:db8:23::2 2001:db8:34::4 esp 0x1002 -E aes-gcm-16 "12345678901234567890";
add 2001:db8:34::4 2001:db8:23::2 esp 0x1003 -E aes-gcm-16 "12345678901234567890";
EOF
cat > /usr/local/etc/ipsec.conf <<EOF
config setup

conn %default
     authby=secret
     keyexchange=ikev2
     mobike=no
     dpdaction=restart
     dpddelay=5

conn VM4
    left=10.0.23.2
    leftsubnet=10.0.12.0/24
    leftid=VM2
    right=10.0.34.4
    rightsubnet=10.0.45.0/24
    rightid=VM4
    auto=start
EOF
cat > /usr/local/etc/ipsec.secrets <<EOF
VM4 VM2 : PSK "This is a strong password"
EOF
cp -r /usr/local/share/easy-rsa /usr/local/etc/
EASYRSA="/usr/local/etc/easy-rsa"
EASYRSA_PKI="$EASYRSA/pki"
export EASYRSA
export EASYRSA_PKI
easyrsa init-pki
easyrsa gen-dh
echo | easyrsa build-ca nopass
easyrsa build-server-full VM2 nopass
easyrsa build-client-full VM4 nopass
mkdir -p /usr/local/etc/openvpn
cat > /usr/local/etc/openvpn/openvpn.conf <<EOF
dev tun
tun-ipv6
# DCO needs a subnet topology (and loaded if_ovpn)
topology subnet
ca /usr/local/etc/easy-rsa/pki/ca.crt
cert /usr/local/etc/easy-rsa/pki/issued/VM2.crt
key /usr/local/etc/easy-rsa/pki/private/VM2.key
dh /usr/local/etc/easy-rsa/pki/dh.pem
server 10.0.24.0 255.255.255.0
server-ipv6 2001:db8:24::/64
ifconfig-pool-persist ipp.txt
client-config-dir ccd
push "route 10.0.12.0 255.255.255.0"
push "route-ipv6 2001:db8:12::/64"
route 10.0.45.0 255.255.255.0
route-ipv6 2001:db8:45::/64
EOF
mkdir -p /usr/local/etc/openvpn/ccd
cat > /usr/local/etc/openvpn/ccd/VM4 <<EOF
iroute 10.0.45.0 255.255.255.0
iroute-ipv6 2001:db8:45::/64
EOF

cat > /usr/local/etc/openvpn/VM4-openvpn.conf <<EOF
client
dev tun
remote 10.0.23.2
<ca>
EOF

cat /usr/local/etc/easy-rsa/pki/ca.crt >> /usr/local/etc/openvpn/VM4-openvpn.conf
echo '</ca>' >> /usr/local/etc/openvpn/VM4-openvpn.conf
echo '<cert>' >> /usr/local/etc/openvpn/VM4-openvpn.conf
cat /usr/local/etc/easy-rsa/pki/issued/VM4.crt >> /usr/local/etc/openvpn/VM4-openvpn.conf
echo '</cert>' >> /usr/local/etc/openvpn/VM4-openvpn.conf
echo '<key>' >> /usr/local/etc/openvpn/VM4-openvpn.conf
cat /usr/local/etc/easy-rsa/pki/private/VM4.key >> /usr/local/etc/openvpn/VM4-openvpn.conf
echo '</key>' >> /usr/local/etc/openvpn/VM4-openvpn.conf

hostname VM2
service netif restart
service routing restart
service sshd start
config save
}

vpn_vm3 () {
sysrc hostname=VM3 \
	ifconfig_em1="inet 10.0.23.3/24" \
	ifconfig_em1_ipv6="inet6 2001:db8:23::3 prefixlen 64" \
	ifconfig_em2="inet 10.0.34.3/24" \
	ifconfig_em2_ipv6="inet6 2001:db8:34::3 prefixlen 64"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
hostname VM3
service netif restart
config save
}

vpn_vm4 () {
sysrc hostname=VM4 \
	ifconfig_em2="inet 10.0.34.4/24" \
	ifconfig_em2_ipv6="inet6 2001:db8:34::4 prefixlen 64" \
	ifconfig_em3="inet 10.0.45.4/24" \
	ifconfig_em3_ipv6="inet6 2001:db8:45::4 prefixlen 64" \
	defaultrouter="10.0.34.3" \
	ipv6_defaultrouter="2001:db8:34::3"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
cat > /etc/ipsec.conf <<EOF
flush;
spdflush;
spdadd 10.0.12.0/24 10.0.45.0/24 any -P in ipsec esp/tunnel/10.0.23.2-10.0.34.4/require;
spdadd 10.0.45.0/24 10.0.12.0/24 any -P out ipsec esp/tunnel/10.0.34.4-10.0.23.2/require;
add 10.0.23.2 10.0.34.4 esp 0x1000 -E aes-gcm-16 "12345678901234567890";
add 10.0.34.4 10.0.23.2 esp 0x1001 -E aes-gcm-16 "12345678901234567890";
spdadd 2001:db8:12::/64 2001:db8:45::/64 any -P in ipsec esp/tunnel/2001:db8:23::2-2001:db8:34::4/require;
spdadd 2001:db8:45::/64 2001:db8:12::/64 any -P out ipsec esp/tunnel/2001:db8:34::4-2001:db8:23::2/require;
add 2001:db8:23::2 2001:db8:34::4 esp 0x1002 -E aes-gcm-16 "12345678901234567890";
add 2001:db8:34::4 2001:db8:23::2 esp 0x1003 -E aes-gcm-16 "12345678901234567890";
EOF
cat > /usr/local/etc/ipsec.conf <<EOF
config setup

conn %default
    authby=secret
    keyexchange=ikev2
    mobike=no
    dpdaction=restart
    dpddelay=5
conn VM2
    left=10.0.34.4
    leftsubnet=10.0.45.0/24
    leftid=VM4
    right=10.0.23.2
    rightsubnet=10.0.12.0/24
    rightid=VM2
    auto=route
EOF
cat > /usr/local/etc/ipsec.secrets <<EOF
VM4 VM2 : PSK "This is a strong password"
EOF
mkdir -p /usr/local/etc/openvpn
cat > /usr/local/etc/openvpn/openvpn.conf <<EOF
client
dev tun
remote 10.0.23.2
ca ca.crt
cert VM4.crt
key VM4.key
EOF
hostname VM4
service netif restart
service routing restart
config save
}

vpn_vm5 () {
sysrc hostname=VM5 \
	gateway_enable=NO \
	ipv6_gateway_enable=NO \
	ifconfig_em3="inet 10.0.45.5/24" \
	ifconfig_em3_ipv6="inet6 2001:db8:45::5 prefixlen 64" \
	defaultrouter="10.0.45.4" \
	ipv6_defaultrouter="2001:db8:45::4"
ifconfig -l | grep -q vtnet && sed -i "" 's/em/vtnet/g' /etc/rc.conf
hostname VM5
service netif restart
service routing restart
config save
}

### BGP bird & FRR lab
bgp_vm1 () {
sysrc hostname=R1 \
	ifconfig_vtnet6="10.0.6.1/24" \
	ifconfig_vtnet6_ipv6="inet6 2001:db8:6::1 prefixlen 64" \
	ifconfig_vtnet0="10.0.1.1/24" \
	ifconfig_vtnet0_ipv6="inet6 2001:db8:1::1 prefixlen 64" \
	bird_enable=YES
cat > /usr/local/etc/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 0.0.0.101;

# Sync bird routing table with kernel
protocol kernel kernel4 {
    ipv4 {
        export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

# Include device route (warning, a device route is a /32)
protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bgp R2inet4 {
        local as 100;
        neighbor 10.0.6.2 as 100;
        ipv4 {
            export all;
            import all;
        };
}

protocol bgp R2inet6 {
        local as 100;
        neighbor 2001:db8:6::2 as 100;
        ipv6 {
            export all;
            import all;
        };
}
EOF
config save
hostname R1
service netif restart
service bird start
}

bgp_vm2 () {
sysrc hostname=R2 \
	ifconfig_vtnet6="10.0.6.2/24" \
	ifconfig_vtnet6_ipv6="inet6 2001:db8:6::2 prefixlen 64" \
	bird_enable=YES
cat > /usr/local/etc/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 0.0.0.102;

# Define variable
define myas = 100;

# Sync bird routing table with kernel
protocol kernel kernel4 {
    ipv4 {
        export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bgp R1inet4 {
        local as myas;
        neighbor 10.0.6.1 as myas;
        rr client;
        ipv4 {
            import all;
            export all;
        };
}

protocol bgp R3inet4 {
        local as myas;
        neighbor 10.0.6.3 as myas;
        ipv4 {
            import all;
            export all;
        };
        rr client;
}
protocol bgp R1inet6 {
        local as myas;
        neighbor 2001:db8:6::1 as myas;
        ipv6 {
            import all;
            export all;
        };
        rr client;
}

protocol bgp R3inet6 {
        local as myas;
        neighbor 2001:db8:6::3 as myas;
        ipv6 {
            import all;
            export all;
        };
        rr client;
}
EOF
hostname R2
config save
service netif restart
service bird start
}

bgp_vm3 () {
sysrc hostname=R3 \
	ifconfig_vtnet6="10.0.6.3/24" \
	ifconfig_vtnet6_ipv6="inet6 2001:db8:6::3 prefixlen 64" \
	ifconfig_vtnet2="10.0.2.3/24" \
	ifconfig_vtnet2_ipv6="inet6 2001:db8:2::3 prefixlen 64" \
	bird_enable=YES
cat > /usr/local/etc/bird.conf <<EOF
# Configure logging
log syslog all;
log "/var/log/bird.log" all;
log stderr all;

# Override router ID
router id 0.0.0.103;

# Define variable
define myas = 100;

# Sync bird routing table with kernel
protocol kernel kernel4 {
    ipv4 {
        export all;
    };
}
protocol kernel kernel6 {
    ipv6 {
        export all;
    };
}

protocol device {
        scan time 10;
}

# Include directly connected networks
protocol direct {
        ipv4;
        ipv6;
}

protocol bgp R2inet4 {
        local as myas;
        neighbor 10.0.6.2 as myas;
        ipv4 {
            import all;
            export all;
            next hop self;
        };
}

protocol bgp R4inet4 {
        local as myas;
        # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
        # Otherwise it will use the wrong 0.0.0.0 IP as source
        source address 10.0.2.3;
        neighbor 10.0.2.4 as 200;
        password "abigpassword";
        ipv4 {
            import all;
            export all;
            next hop self;
        };
}

protocol bgp R2inet6 {
        local as myas;
        neighbor 2001:db8:6::2 as myas;
        ipv6 {
            import all;
            export all;
            next hop self;
        };
}

protocol bgp R4inet6 {
        local as myas;
        # Bird creates IPSEC SAD entry automatically but it need to know the source IP address
        # Otherwise it will use the wrong :: IP as source
        source address 2001:db8:2::3;
        neighbor 2001:db8:2::4 as 200;
        password "abigpassword";
        ipv6 {
            import all;
            export all;
            next hop self;
        };
}
EOF
hostname R3
service netif restart
service bird start
}

bgp_vm4 () {
sysrc hostname=R4 \
	frr_enable=YES \
	ipsec_enable=YES \
	ipsec_file="/etc/ipsec.conf"
cat <<EOF > /etc/ipsec.conf
flush ;
add 10.0.2.3 10.0.2.4 tcp 0x1000 -A tcp-md5 "abigpassword" ;
add 10.0.2.4 10.0.2.3 tcp 0x1001 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:2::3 2001:db8:2::4 tcp 0x1002 -A tcp-md5 "abigpassword" ;
add -6 2001:db8:2::4 2001:db8:2::3 tcp 0x1003 -A tcp-md5 "abigpassword" ;
EOF
service ipsec start
cat > /usr/local/etc/frr/frr.conf <<EOF
interface vtnet2
 ip address 10.0.2.4/24
 ipv6 address 2001:db8:2::4/64
interface vtnet3
 ip address 10.0.3.4/24
 ipv6 address 2001:db8:3::4/64
router bgp 64512
 bgp router-id 0.0.0.204
 bgp confederation identifier 200
 bgp confederation peers 65535
 no bgp ebgp-requires-policy
 no bgp default ipv4-unicast
 neighbor 10.0.2.3 remote-as 100
 neighbor 10.0.2.3 password abigpassword
 neighbor 10.0.3.5 remote-as 64512
 neighbor 2001:db8:2::3 remote-as 100
 neighbor 2001:db8:2::3 password abigpassword
 neighbor 2001:db8:3::5 remote-as 64512
 !
 address-family ipv4 unicast
  network 10.0.3.0/24
  neighbor 10.0.2.3 activate
  neighbor 10.0.3.5 activate
  neighbor 10.0.3.5 next-hop-self
  no neighbor 2001:db8:2::3 activate
  no neighbor 2001:db8:3::5 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:3::/64
  neighbor 2001:db8:2::3 activate
  neighbor 2001:db8:3::5 activate
  neighbor 2001:db8:3::5 next-hop-self
 exit-address-family
!
EOF
hostname R4
service frr start
config save
}

bgp_vm5 () {
sysrc hostname=R5 \
	frr_enable=YES
cat <<EOF > /usr/local/etc/frr/frr.conf
log syslog
interface vtnet3
 ip address 10.0.3.5/24
 ipv6 address 2001:db8:3::5/64
!
interface vtnet4
 ip address 10.0.4.5/24
 ipv6 address 2001:db8:4::5/64
router bgp 64512
 bgp router-id 0.0.0.205
 bgp confederation identifier 200
 bgp confederation peers 65535
 no bgp ebgp-requires-policy
 no bgp default ipv4-unicast
 neighbor 10.0.3.4 remote-as 64512
 neighbor 10.0.4.6 remote-as 65535
 neighbor 2001:db8:3::4 remote-as 64512
 neighbor 2001:db8:4::6 remote-as 65535
 !
 address-family ipv4 unicast
  network 10.0.3.0/24
  network 10.0.4.0/24
  neighbor 10.0.3.4 activate
  neighbor 10.0.3.4 next-hop-self
  neighbor 10.0.4.6 activate
  neighbor 10.0.4.6 next-hop-self
  no neighbor 2001:db8:3::4 activate
  no neighbor 2001:db8:4::6 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:3::/64
  network 2001:db8:4::/64
  neighbor 2001:db8:3::4 activate
  neighbor 2001:db8:3::4 next-hop-self
  neighbor 2001:db8:4::6 activate
  neighbor 2001:db8:4::6 next-hop-self
 exit-address-family
EOF
hostname R5
service frr start
config save
}

bgp_vm6 () {
sysrc hostname=R6 \
	ipsec_enable=YES \
	ipsec_file="/etc/ipsec.conf" \
	frr_enable=YES
cat <<EOF > /etc/ipsec.conf
flush ;
add 10.0.5.6 10.0.5.7 tcp 0x1000 -A tcp-md5 "abcdefgh" ;
add 10.0.5.7 10.0.5.6 tcp 0x1001 -A tcp-md5 "abcdefgh" ;
add -6 2001:db8:5::6 2001:db8:5::7 tcp 0x1002 -A tcp-md5 "abcdefgh" ;
add -6 2001:db8:5::7 2001:db8:5::6 tcp 0x1003 -A tcp-md5 "abcdefgh" ;
EOF
service ipsec start
cat <<EOF > /usr/local/etc/frr/frr.conf
log syslog
interface vtnet4
 ip address 10.0.4.6/24
 ipv6 address 2001:db8:4::6/64
!
interface vtnet5
 ip address 10.0.5.6/24
 ipv6 address 2001:db8:5::6/64
router bgp 65535
 bgp router-id 0.0.0.206
 bgp confederation identifier 200
 bgp confederation peers 64512
 no bgp ebgp-requires-policy
 no bgp default ipv4-unicast
 neighbor 10.0.4.5 remote-as 64512
 neighbor 10.0.5.7 remote-as 65535
 neighbor 10.0.5.7 password abcdefgh
 neighbor 2001:db8:4::5 remote-as 64512
 neighbor 2001:db8:5::7 remote-as 65535
 neighbor 2001:db8:5::7 password abcdefgh
 !
 address-family ipv4 unicast
  network 10.0.5.0/24
  neighbor 10.0.4.5 activate
  neighbor 10.0.4.5 next-hop-self
  neighbor 10.0.5.7 activate
  neighbor 10.0.5.7 next-hop-self
  no neighbor 2001:db8:4::5 activate
  no neighbor 2001:db8:5::7 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:5::/64
  neighbor 2001:db8:4::5 activate
  neighbor 2001:db8:4::5 next-hop-self
  neighbor 2001:db8:5::7 activate
  neighbor 2001:db8:5::7 next-hop-self
 exit-address-family
EOF
hostname R6
service frr start
config save
}

bgp_vm7 () {
sysrc hostname=R7 \
	ipsec_enable=YES \
	ipsec_file="/etc/ipsec.conf" \
	frr_enable=YES
cat <<EOF > /etc/ipsec.conf
flush ;
add 10.0.5.6 10.0.5.7 tcp 0x1000 -A tcp-md5 "abcdefgh" ;
add 10.0.5.7 10.0.5.6 tcp 0x1001 -A tcp-md5 "abcdefgh" ;
add -6 2001:db8:5::6 2001:db8:5::7 tcp 0x1002 -A tcp-md5 "abcdefgh" ;
add -6 2001:db8:5::7 2001:db8:5::6 tcp 0x1003 -A tcp-md5 "abcdefgh" ;
EOF
service ipsec start
cat <<EOF > /usr/local/etc/frr/frr.conf
log syslog
interface vtnet0
 ip address 10.0.7.7/24
 ipv6 address 2001:db8:7::7/64
!
interface vtnet5
 ip address 10.0.5.7/24
 ipv6 address 2001:db8:5::7/64
router bgp 65535
 bgp router-id 0.0.0.207
 bgp confederation identifier 200
 bgp confederation peers 64512
 no bgp ebgp-requires-policy
 no bgp default ipv4-unicast
 neighbor 10.0.5.6 remote-as 65535
 neighbor 10.0.5.6 password abcdefgh
 neighbor 2001:db8:5::6 remote-as 65535
 neighbor 2001:db8:5::6 password abcdefgh
 !
 address-family ipv4 unicast
  network 10.0.5.0/24
  network 10.0.7.0/24
  neighbor 10.0.5.6 activate
  no neighbor 2001:db8:5::6 activate
 exit-address-family
 !
 address-family ipv6 unicast
  network 2001:db8:5::/64
  network 2001:db8:7::/64
  neighbor 2001:db8:5::6 activate
 exit-address-family
EOF
hostname R7
service frr start
config save
}

jailpf_vm1 () {
sysrc hostname=VM1 \
	cloned_interfaces="bridge0" \
	ifconfig_bridge0="addm vtnet4" \
	ifconfig_vtnet4="up" \
	ifconfig_vtnet5="up" \
	vlans_vtnet5="1 2" \
	ifconfig_vtnet5_1="up" \
	ifconfig_vtnet5_2="up" \
	kld_list+=" carp pf pflog pfsync"
cat > /etc/devfs.rules <<EOF
[devfsrules_jailpf=4]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path 'pf' unhide
add path 'pflog*' unhide
add path 'bpf*' unhide
EOF
hostname VM1
service devfs restart
service netif restart
service kld start
tenant -c -j jail11 -i bridge0,vtnet5.1
cat > /etc/jails/jail11/rc.conf <<EOF
hostname="jail11"
sshd_enable=YES
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_vtnet5_1="inet 10.0.0.252/24"
ifconfig_vtnet5_1_alias0="inet 10.0.0.254/32 vhid 1 advskew 100 pass customer1i"
ifconfig_epair10b="inet 2.2.2.11/24"
ifconfig_epair10b_alias0="inet 2.2.2.1/32 vhid 2 advskew 100 pass customer1e"
pf_enable=YES
pflog_enable=YES
pfsync_enable=YES
pfsync_syncdev=vtnet5.1
EOF
echo "net.inet.carp.preempt=1" >> /etc/jails/jail11/sysctl.conf
cat > /etc/jails/jail11/pf.conf <<EOF
nat on epair10b from vtnet5.1:network to any -> 2.2.2.1
block
pass quick on vtnet5.1 proto pfsync keep state (no-sync)
pass quick on epair10b  proto carp keep state (no-sync)
pass quick on vtnet5.1 proto carp keep state (no-sync)
pass log from vtnet5.1:network to epair10b:network
pass log from self to any
EOF
tenant -c -j jail12 -i bridge0,vtnet5.2
cat > /etc/jails/jail12/rc.conf <<EOF
hostname=jail12
sshd_enable=YES
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_vtnet5_2="inet 10.0.0.252/24"
ifconfig_vtnet5_2_alias0="inet 10.0.0.254/32 vhid 3 advskew 200 pass customer2i"
ifconfig_epair20b="inet 2.2.2.12/24"
ifconfig_epair20b_alias0="inet 2.2.2.2/32 vhid 4 advskew 200 pass customer2e"
pf_enable=YES
pflog_enable=YES
pfsync_enable=YES
pfsync_syncdev=vtnet5.2
EOF
echo "net.inet.carp.preempt=1" >> /etc/jails/jail12/sysctl.conf
cat > /etc/jails/jail12/pf.conf <<EOF
nat on epair20b from vtnet5.2:network to any -> 2.2.2.2
block
pass quick on vtnet5.2 proto pfsync keep state (no-sync)
pass quick on epair20b  proto carp keep state (no-sync)
pass quick on vtnet5.2 proto carp keep state (no-sync)
pass log from vtnet5.2:network to epair20b:network
pass log from self to any
EOF
service jail start
}

jailpf_vm2 () {
sysrc hostname=VM2 \
	cloned_interfaces="bridge0" \
	ifconfig_bridge0="addm vtnet4" \
	ifconfig_vtnet4="up" \
	ifconfig_vtnet5="up" \
	vlans_vtnet5="1 2" \
	ifconfig_vtnet5_1="up" \
	ifconfig_vtnet5_2="up" \
	kld_list+=" carp pf pflog pfsync"
cat > /etc/devfs.rules <<EOF
[devfsrules_jailpf=4]
add include \$devfsrules_hide_all
add include \$devfsrules_unhide_basic
add include \$devfsrules_unhide_login
add path 'pf' unhide
add path 'pflog*' unhide
add path 'bpf*' unhide
EOF
hostname VM2
service devfs restart
service netif restart
service kld start
tenant -c -j jail21 -i bridge0,vtnet5.1
cat > /etc/jails/jail21/rc.conf <<EOF
hostname=jail21
sshd_enable=YES
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_vtnet5_1="inet 10.0.0.253/24"
ifconfig_vtnet5_1_alias0="inet 10.0.0.254/32 vhid 1 advskew 200 pass customer1i"
ifconfig_epair10b="inet 2.2.2.21/24"
ifconfig_epair10b_alias0="inet 2.2.2.1/32 vhid 2 advskew 200 pass customer1e"
pf_enable=YES
pflog_enable=YES
pfsync_enable=YES
pfsync_syncdev=vtnet5.1
EOF
echo "net.inet.carp.preempt=1" >> /etc/jails/jail21/sysctl.conf
cat > /etc/jails/jail21/pf.conf <<EOF
nat on epair10b from vtnet5.1:network to any -> 2.2.2.1
block
pass quick on vtnet5.1 proto pfsync keep state (no-sync)
pass quick on epair10b proto carp keep state (no-sync)
pass quick on vtnet5.1 proto carp keep state (no-sync)
pass log from vtnet5.1:network to epair10b:network
pass log from self to any
EOF
tenant -c -j jail22 -i bridge0,vtnet5.2
cat > /etc/jails/jail22/rc.conf <<EOF
hostname=jail22
sshd_enable=YES
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_vtnet5_2="inet 10.0.0.253/24"
ifconfig_vtnet5_2_alias0="inet 10.0.0.254/32 vhid 3 advskew 100 pass customer2i"
ifconfig_epair20b="inet 2.2.2.22/24"
ifconfig_epair20b_alias0="inet 2.2.2.2/32 vhid 4 advskew 100 pass customer2e"
pf_enable=YES
pflog_enable=YES
pfsync_enable=YES
pfsync_syncdev=vtnet5.2
EOF
echo "net.inet.carp.preempt=1" >> /etc/jails/jail22/sysctl.conf
cat > /etc/jails/jail22/pf.conf <<EOF
nat on epair20b from vtnet5.2:network to any -> 2.2.2.2
block
pass quick on vtnet5.2 proto pfsync keep state (no-sync)
pass quick on epair20b proto carp keep state (no-sync)
pass quick on vtnet5.2 proto carp keep state (no-sync)
pass log from vtnet5.2:network to epair20b:network
pass log from self to any
EOF
service jail start
}

jailpf_vm3 () {
sysrc hostname=VM3 \
	ifconfig_vtnet4="inet 2.2.2.3/24" \
	inetd_enable=YES \
	gateway_enable=NO \
	ipv6_gateway_enable=NO
sed -i -e 's/#echo/echo/g' /etc/inetd.conf
hostname VM3
service netif restart
service routing restart || true
service inetd start
config save
}

jailpf_vm4 () {
sysrc hostname=VM4 \
	ifconfig_vtnet5="up" \
	vlans_vtnet5="1" \
	ifconfig_vtnet5_1="inet 10.0.0.4/24" \
	defaultrouter="10.0.0.254" \
	gateway_enable=NO \
	ipv6_gateway_enable=NO
hostname VM4
service netif restart
service routing restart
config save
}

jailpf_vm5 () {
sysrc hostname=VM5 \
	ifconfig_vtnet5="up" \
	vlans_vtnet5="2" \
	ifconfig_vtnet5_2="inet 10.0.0.5/24" \
	defaultrouter="10.0.0.254" \
	gateway_enable=NO \
	ipv6_gateway_enable=NO
hostname VM5
service netif restart
service routing restart
config save
}

### graphpath

graphpath () {
sysrc hostname="me" \
	cloned_interfaces="bridge1 bridge2 bridge11 bridge12 bridge21" \
	ifconfig_bridge1="inet 10.0.1.1/24" \
	ifconfig_bridge1_ipv6="inet6 2001:db8:1::1 prefixlen 64" \
	ifconfig_bridge2="inet 10.0.2.1/24" \
	ifconfig_bridge2_ipv6="inet6 2001:db8:2::1 prefixlen 64" \
	ifconfig_bridge11="up" \
	ifconfig_bridge12="up" \
	ifconfig_bridge21="up" \
	static_routes="host11 host12 host21" \
	route_host11="-net 10.0.11.0/24 10.0.1.11" \
	route_host12="-net 10.0.12.0/24 10.0.1.12" \
	route_host21="-net 10.0.21.0/24 10.0.2.21" \
	ipv6_static_routes="host11 host12 host21" \
	ipv6_route_host11="2001:db8:11:: -prefixlen 64 2001:db8:1::11" \
	ipv6_route_host12="2001:db8:12:: -prefixlen 64 2001:db8:1::12" \
	ipv6_route_host21="2001:db8:21:: -prefixlen 64 2001:db8:2::21"
hostname me
service netif restart
service routing restart
tenant -c -j host11 -i bridge11
cat > /etc/jails/host11/rc.conf <<EOF
hostname="host11"
ifconfig_epair111b="inet 10.0.11.11/24"
ifconfig_epair111b_ipv6="inet6 2001:db8:11::11 prefixlen 64"
defaultrouter="10.0.11.254"
ipv6_defaultrouter="2001:db8:11::254"
EOF

tenant -c -j host12 -i bridge12
cat > /etc/jails/host12/rc.conf <<EOF
hostname="host12"
ifconfig_epair212b="inet 10.0.12.12/24"
ifconfig_epair212b_ipv6="inet6 2001:db8:12::12 prefixlen 64"
defaultrouter="10.0.12.254"
ipv6_defaultrouter="2001:db8:12::254"
EOF

tenant -c -j router11 -i bridge1,bridge11
cat > /etc/jails/router11/rc.conf <<EOF
hostname="router11"
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair31b="inet 10.0.1.11/24"
ifconfig_epair31b_ipv6="inet6 2001:db8:1::11 prefixlen 64"
ifconfig_epair311b="inet 10.0.11.254/24"
ifconfig_epair311b_ipv6="inet6 2001:db8:11::254 prefixlen 64"
defaultrouter="10.0.1.1"
ipv6_defaultrouter="2001:db8:1::1"
EOF

tenant -c -j router12 -i bridge1,bridge12
cat > /etc/jails/router12/rc.conf <<EOF
hostname=router12
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair41b="inet 10.0.1.12/24"
ifconfig_epair41b_ipv6="inet6 2001:db8:1::12 prefixlen 64"
ifconfig_epair412b="inet 10.0.12.254/24"
ifconfig_epair412b_ipv6="inet6 2001:db8:12::254 prefixlen 64"
defaultrouter="10.0.1.1"
ipv6_defaultrouter="2001:db8:1::1"
EOF

tenant -c -j router21 -i bridge2,bridge21
cat > /etc/jails/router21/rc.conf <<EOF
hostname="router21"
gateway_enable=YES
ipv6_gateway_enable=YES
ifconfig_epair52b="inet 10.0.2.21/24"
ifconfig_epair52b_ipv6="inet6 2001:db8:2::21 prefixlen 64"
ifconfig_epair521b="inet 10.0.21.254/24"
ifconfig_epair521b_ipv6="inet6 2001:db8:21::254 prefixlen 64"
defaultrouter="10.0.2.1"
ipv6_defaultrouter="2001:db8:2::1"
EOF

tenant -c -j host21 -i bridge21
cat > /etc/jails/host21/rc.conf <<EOF
hostname="host21"
ifconfig_epair621b="inet 10.0.21.21/24"
ifconfig_epair621b_ipv6="inet6 2001:db8:21::21 prefixlen 64"
defaultrouter="10.0.21.254"
ipv6_defaultrouter="2001:db8:21::254"
EOF

service jail start
}

mlvpn_vm1 () {
sysrc hostname=VM1 \
	cloned_interfaces="lo1" \
	ifconfig_lo1="inet 10.1.1.1/32" \
	ifconfig_vtnet0="inet 10.0.12.1/24 fib 2" \
	ifconfig_vtnet1="inet 10.0.13.1/24 fib 3" \
	ifconfig_vtnet2="inet 10.0.14.1/24 fib 4" \
	static_routes="ISP1 ISP2 ISP3" \
	route_ISP1="-fib 2 default 10.0.12.2" \
	route_ISP2="-fib 3 default 10.0.13.3" \
	route_ISP3="-fib 4 default 10.0.14.4"
cat <<EOF > /usr/local/etc/mlvpn/mlvpn.conf
[general]
statuscommand = "/usr/local/etc/mlvpn/mlvpn_updown.sh"
mode = "client"
mtu = 1452
tuntap = "tun"
ip4 = "10.0.16.1/30"
ip4_gateway = "10.0.16.2"
ip4_routes = "10.6.6.6/32"
timeout = 30
password = "pleasechangeme!"
#reorder_buffer_size = 64
loss_tolerence = 10

[dsl2]
bindhost = "10.0.12.1"
bindport = 5082
bindfib = 2
remotehost = "10.0.56.6"
remoteport = 5082

[dsl3]
bindhost = "10.0.13.1"
bindport = 5083
bindfib = 3
remotehost = "10.0.56.6"
remoteport = 5083

[dsl4]
bindhost = "10.0.14.1"
bindport = 5084
bindfib = 4
remotehost = "10.0.56.6"
remoteport = 5084

EOF
service mlvpn enable
service netif restart
service routing restart
service mlvpn start
hostname VM1
config save
}

mlvpn_vm2 () {
sysrc hostname=VM2 \
	ifconfig_vtnet0="inet 10.0.12.2/24" \
	ifconfig_vtnet3="inet 10.0.25.2/24" \
	defaultrouter="10.0.25.5" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules"
cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet
# Flush out the list before we begin.
\${fwcmd} -f flush
\${fwcmd} pipe 10 config bw 10Mbit/s
\${fwcmd} pipe 20 config bw 10Mbit/s
#Traffic getting out vtnet0 is limited to 10Mbit/s
\${fwcmd} add 1000 pipe 10 all from any to any out via vtnet0
#Traffic getting int vtnet0 is limited to 10Mbit/s
\${fwcmd} add 2000 pipe 20 all from any to any in via vtnet0
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service netif restart
service routing restart
service ipfw start
hostname VM2
config save
}

mlvpn_vm3 () {
sysrc hostname=VM3 \
	ifconfig_vtnet0="inet 10.0.13.3/24" \
	ifconfig_vtnet3="inet 10.0.35.3/24" \
	defaultrouter="10.0.35.5" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules"

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet
# Flush out the list before we begin.
\${fwcmd} -f flush
\${fwcmd} pipe 10 config bw 10Mbit/s
\${fwcmd} pipe 20 config bw 10Mbit/s
#Traffic getting out vtnet0 is limited to 10Mbit/s
\${fwcmd} add 1000 pipe 10 all from any to any out via vtnet0
#Traffic getting int vtnet0 is limited to 10Mbit/s
\${fwcmd} add 2000 pipe 20 all from any to any in via vtnet0
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service netif restart
service routing restart
service ipfw start
hostname VM3
config save
}

mlvpn_vm4 () {
sysrc hostname=VM4 \
	ifconfig_vtnet0="inet 10.0.14.4/24" \
	ifconfig_vtnet3="inet 10.0.45.4/24" \
	defaultrouter="10.0.45.5" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules"

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet
# Flush out the list before we begin.
\${fwcmd} -f flush
\${fwcmd} pipe 10 config bw 10Mbit/s
\${fwcmd} pipe 20 config bw 10Mbit/s
#Traffic getting out vtnet0 is limited to 10Mbit/s
\${fwcmd} add 1000 pipe 10 all from any to any out via vtnet0
#Traffic getting int vten0 is limited to 10Mbit/s
\${fwcmd} add 2000 pipe 20 all from any to any in via vtnet0
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service netif restart
service routing restart
service ipfw start
hostname VM4
config save
}

mlvpn_vm5 () {
sysrc hostname=R5 \
	ifconfig_vtnet1="inet 10.0.25.5/24" \
	ifconfig_vtnet2="inet 10.0.35.5/24" \
	ifconfig_vtnet3="inet 10.0.45.5/24" \
	ifconfig_vtnet4="inet 10.0.56.5/24" \
	static_routes="ISP1 ISP2 ISP3" \
	route_ISP1="-host 10.0.12.1 10.0.25.2" \
	route_ISP2="-host 10.0.13.1 10.0.35.3" \
	route_ISP3="-host 10.0.14.1 10.0.45.4"
service netif restart
service routing restart
hostname VM5
config save
}


mlvpn_vm6 () {
sysrc hostname=VM6 \
	cloned_interfaces="lo1" \
	ifconfig_lo1="inet 10.6.6.6/32" \
	ifconfig_vtnet4="inet 10.0.56.6/24" \
	defaultrouter="10.0.56.5"
cat > /usr/local/etc/mlvpn/mlvpn.conf <<EOF
[general]
statuscommand = "/usr/local/etc/mlvpn/mlvpn_updown.sh"
tuntap = "tun"
mode = "server"
ip4 = "10.0.16.2/30"
ip4_gateway = "10.0.16.1"
ip4_routes = "10.1.1.1/32"
timeout = 30
password = "pleasechangeme!"
#reorder_buffer_size = 64
loss_tolerence = 10

[adsl2]
bindhost = "10.0.56.6"
bindport = 5082

[adsl3]
bindhost = "10.0.56.6"
bindport = 5083

[adsl4]
bindhost = "10.0.56.6"
bindport = 5084

EOF

service mlvpn enable
service netif restart
service routing restart
service mlvpn start
hostname VM6
config save
}

mlppp_vm1 () {
sysrc hostname=R1 \
	ifconfig_vtnet0="inet 10.0.12.1/24" \
	ifconfig_vtnet1="inet 10.0.13.1/24" \
	ifconfig_vtnet2="inet 10.0.14.1/24" \
	static_routes="ISP1 ISP2 ISP3" \
	route_ISP1="-host 10.0.56.62 10.0.12.2" \
	route_ISP2="-host 10.0.56.63 10.0.13.3" \
	route_ISP3="-host 10.0.56.64 10.0.14.4" \
	mpd_enable=YES \
	mpd_flags="-b -s ppp"
cat > /usr/local/etc/mpd5/mpd.conf <<EOF
default:
        load l2tp_client
l2tp_client:
        # Create the bundle
        create bundle template B
        # Enable IPv6
        set bundle enable ipv6cp
        # Enable TCP MSS fix
        set iface enable tcpmssfix
        # Use this interface as default route
        set iface route default
        # Disable IPCP configuration for the iperf test
        #set ipcp yes vjcomp
        # Create clonable template link ADSL1
        create link template L l2tp
        set link action bundle B
        set link enable multilink
        set link keep-alive 10 30
        set link mtu 1460
        set l2tp secret blah
        # Retry indefinitly to redial
        set link max-redial 0
        # SDSL1
        create link static sdsl1 L
        set l2tp peer 10.0.56.62
        # Configure the UPLOAD bandwidth
        set link bandwidth 1000000
        open link
        # SDSL2
        create link static sdsl2 L
        set l2tp peer 10.0.56.63
        # Configure the UPLOAD bandwidth
        set link bandwidth 2000000
        open link
        # SDSL3
        create link static sdsl3 L
        set l2tp peer 10.0.56.64
        # Configure the UPLOAD bandwidth
        set link bandwidth 3000000
        open link
EOF

service netif restart
service routing restart
service mpd5 start
hostname R1
config save
}

mlppp_vm2 () {
sysrc hostname=R2 \
	ifconfig_vtnet0="inet 10.0.12.2/24" \
	ifconfig_vtnet3="inet 10.0.25.2/24" \
	defaultrouter="10.0.25.5" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules"
cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet
# Flush out the list before we begin.
\${fwcmd} -f flush
\${fwcmd} pipe 10 config bw 1Mbit/s
\${fwcmd} pipe 20 config bw 1Mbit/s
#Traffic getting out vtnet0 is limited to 1Mbit/s
\${fwcmd} add 1000 pipe 10 all from any to any out via vtnet0
#Traffic getting int vtnet0 is limited to 1Mbit/s
\${fwcmd} add 2000 pipe 20 all from any to any in via vtnet0
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service netif restart
service routing restart
service ipfw start
hostname R2
config save
}

mlppp_vm3 () {
sysrc hostname=R3 \
	ifconfig_vtnet0="inet 10.0.13.3/24" \
	ifconfig_vtnet3="inet 10.0.35.3/24" \
	defaultrouter="10.0.35.5" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules"

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet
# Flush out the list before we begin.
\${fwcmd} -f flush
\${fwcmd} pipe 10 config bw 2Mbit/s
\${fwcmd} pipe 20 config bw 2Mbit/s
#Traffic getting out vtnet0 is limited to 2Mbit/s
\${fwcmd} add 1000 pipe 10 all from any to any out via vtnet0
#Traffic getting int vtnet0 is limited to 2Mbit/s
\${fwcmd} add 2000 pipe 20 all from any to any in via vtnet0
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service netif restart
service routing restart
service ipfw start
hostname R3
config save
}

mlppp_vm4 () {
sysrc hostname=R4 \
	ifconfig_vtnet0="inet 10.0.14.4/24" \
	ifconfig_vtnet3="inet 10.0.45.4/24" \
	defaultrouter="10.0.45.5" \
	firewall_enable=YES \
	firewall_script="/etc/ipfw.rules"

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
kldstat -q -m dummynet || kldload dummynet
# Flush out the list before we begin.
\${fwcmd} -f flush
\${fwcmd} pipe 10 config bw 3Mbit/s
\${fwcmd} pipe 20 config bw 3Mbit/s
#Traffic getting out vtnet0 is limited to 3Mbit/s
\${fwcmd} add 1000 pipe 10 all from any to any out via vtnet0
#Traffic getting int vten0 is limited to 3Mbit/s
\${fwcmd} add 2000 pipe 20 all from any to any in via vtnet0
#We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service netif restart
service routing restart
service ipfw start
hostname R4
config save
}

mlppp_vm5 () {
sysrc hostname=R5 \
	ifconfig_vtnet1="inet 10.0.25.5/24" \
	ifconfig_vtnet2="inet 10.0.35.5/24" \
	ifconfig_vtnet3="inet 10.0.45.5/24" \
	ifconfig_vtnet4="inet 10.0.56.5/24" \
	static_routes="ISP1 ISP2 ISP3" \
	route_ISP1="-host 10.0.12.1 10.0.25.2" \
	route_ISP2="-host 10.0.13.1 10.0.35.3" \
	route_ISP3="-host 10.0.14.1 10.0.45.4"
service netif restart
service routing restart
hostname R5
config save
}


mlppp_vm6 () {
sysrc hostname=R6 \
	cloned_interfaces="lo1" \
	ifconfig_lo1="inet 10.6.6.6/32" \
	ifconfig_vtnet4="inet 10.0.56.62/24" \
	ifconfig_vtnet4_alias1="inet 10.0.56.63/32" \
	ifconfig_vtnet4_alias2="inet 10.0.56.64/32" \
	defaultrouter="10.0.56.5" \
	mpd_enable=YES \
	mpd_flags="-b -s ppp"
cat > /usr/local/etc/mpd5/mpd.conf <<EOF
default:
        load l2tp_server
l2tp_server:
        # IP Pool
        set ippool add pool1 10.0.16.10 10.0.16.100
        # Create bundle template named B
        create bundle template B
        # Enable IPv6
        set bundle enable ipv6cp
        # Configure interface
        set iface enable tcpmssfix
        # Handle IPCP configuration
        set ipcp yes vjcomp
        # Handle the IPCP configuration
        set ipcp ranges 10.0.16.1/24 ippool pool1
        # Create clonable link template named adsl1
        create link template L l2tp
        set link action bundle B
        set link enable multilink
        set link keep-alive 10 30
        set link mtu 1460
        set l2tp secret blah
        # SDSL1
        create link static sdsl1 L
        set l2tp self 10.0.56.62
		# set DOWNLOAD bandwidth of ISP1
        set link bandwidth 1000000
        set link enable incoming
        # SDSL2
        create link static sdsl2 L
        set l2tp self 10.0.56.63
		# set DOWNLOAD bandwidth of ISP2
        set link bandwidth 2000000
        set link enable incoming
        # SDSL3
        create link static sdsl3 L
        set l2tp self 10.0.56.64
		# set DOWNLOAD bandwidth of ISP3
        set link bandwidth 3000000
        set link enable incoming
EOF

service netif restart
service routing restart
service mpd5 start
hostname R6
config save
}

ecmp_vm1 () {
sysrc hostname=VM1 \
	gateway_enable=NO \
	ipv6_gateway_enable=NO \
	ifconfig_vtnet0="inet 10.0.12.1/24" \
	ifconfig_vtnet0_alias1="inet 10.0.12.11/32" \
	ifconfig_vtnet0_alias2="inet 10.0.12.21/32" \
	ifconfig_vtnet0_alias3="inet 10.0.12.31/32" \
	ifconfig_vtnet0_alias4="inet 10.0.12.41/32" \
	ifconfig_vtnet0_alias5="inet 10.0.12.51/32" \
	ifconfig_vtnet0_ipv6="inet6 2001:db8:12::1 prefixlen 64" \
	ifconfig_vtnet0_alias61="inet6 2001:db8:12::11 prefixlen 64" \
	ifconfig_vtnet0_alias62="inet6 2001:db8:12::21 prefixlen 64" \
	ifconfig_vtnet0_alias63="inet6 2001:db8:12::31 prefixlen 64" \
	ifconfig_vtnet0_alias64="inet6 2001:db8:12::41 prefixlen 64" \
	ifconfig_vtnet0_alias65="inet6 2001:db8:12::51 prefixlen 64" \
	defaultrouter="10.0.12.2" \
	ipv6_defaultrouter="2001:db8:12::2"
service hostname restart
service netif restart
service routing restart
config save
}

ecmp_vm2 () {
sysrc hostname=VM2 \
	ifconfig_vtnet0="inet 10.0.12.2/24" \
	ifconfig_vtnet1="inet 10.0.23.2/24" \
	ifconfig_vtnet2="inet 10.0.24.2/24" \
	ifconfig_vtnet0_ipv6="inet6 2001:db8:12::2 prefixlen 64" \
	ifconfig_vtnet1_ipv6="inet6 2001:db8:23::2 prefixlen 64" \
	ifconfig_vtnet2_ipv6="inet6 2001:db8:24::2 prefixlen 64" \
	static_routes="VM3VM6 VM3VM5 VM4VM6 VM4VM5" \
	route_VM3VM6="-net 10.0.56.0/24 10.0.23.3" \
	route_VM3VM5="-net 10.0.35.0/24 10.0.23.3" \
	route_VM4VM6="-net 10.0.56.0/24 10.0.24.4" \
	route_VM4VM5="-net 10.0.45.0/24 10.0.24.4" \
	ipv6_static_routes="VM3VM6 VM3VM5 VM4VM6 VM4VM5" \
	ipv6_route_VM3VM6="2001:db8:56:: -prefixlen 64 2001:db8:23::3" \
	ipv6_route_VM3VM5="2001:db8:35:: -prefixlen 64 2001:db8:23::3" \
	ipv6_route_VM4VM6="2001:db8:56:: -prefixlen 64 2001:db8:24::4" \
	ipv6_route_VM4VM5="2001:db8:45:: -prefixlen 64 2001:db8:24::4"
sed -i '' -e '/net.inet.ip.redirect=0/d' /etc/sysctl.conf
sed -i '' -e '/net.inet6.ip6.redirect=0/d' /etc/sysctl.conf
sysctl net.inet.ip.redirect=1
sysctl net.inet6.ip6.redirect=1
service hostname restart
service netif restart
service routing restart
config save
}

ecmp_vm3 () {
sysrc hostname=VM3 \
	ifconfig_vtnet1="inet 10.0.23.3/24" \
	ifconfig_vtnet3="inet 10.0.35.3/24" \
	ifconfig_vtnet1_ipv6="inet6 2001:db8:23::3 prefixlen 64" \
	ifconfig_vtnet3_ipv6="inet6 2001:db8:35::3 prefixlen 64" \
	static_routes="VM6 VM1" \
	route_VM1="-net 10.0.12.0/24 10.0.23.2" \
	route_VM6="-net 10.0.56.0/24 10.0.35.5" \
	ipv6_static_routes="VM6 VM1" \
	ipv6_route_VM1="2001:db8:12:: -prefixlen 64 2001:db8:23::2" \
	ipv6_route_VM6="2001:db8:56:: -prefixlen 64 2001:db8:35::5"
service hostname restart
service netif restart
service routing restart
config save
}

ecmp_vm4 () {
sysrc hostname=VM4 \
	ifconfig_vtnet1="inet 10.0.24.4/24" \
	ifconfig_vtnet3="inet 10.0.45.4/24" \
	ifconfig_vtnet1_ipv6="inet6 2001:db8:24::4 prefixlen 64" \
	ifconfig_vtnet3_ipv6="inet6 2001:db8:45::4 prefixlen 64" \
	static_routes="VM6 VM1" \
	route_VM1="-net 10.0.12.0/24 10.0.24.2" \
	route_VM6="-net 10.0.56.0/24 10.0.45.5" \
	ipv6_static_routes="VM6 VM1" \
	ipv6_route_VM1="2001:db8:12:: -prefixlen 64 2001:db8:24::2" \
	ipv6_route_VM6="2001:db8:56:: -prefixlen 64 2001:db8:45::5"
service hostname restart
service netif restart
service routing restart
config save
}

ecmp_vm5 () {
sysrc hostname=VM5 \
	ifconfig_vtnet2="inet 10.0.35.5/24" \
	ifconfig_vtnet3="inet 10.0.45.5/24" \
	ifconfig_vtnet4="inet 10.0.56.5/24" \
	ifconfig_vtnet2_ipv6="inet6 2001:db8:35::5 prefixlen 64" \
	ifconfig_vtnet3_ipv6="inet6 2001:db8:45::5 prefixlen 64" \
	ifconfig_vtnet4_ipv6="inet6 2001:db8:56::5 prefixlen 64" \
	static_routes="VM3VM1 VM3VM2 VM4VM1 VM4VM2" \
	route_VM3VM1="-net 10.0.12.0/24 10.0.35.3" \
	route_VM3VM2="-net 10.0.23.0/24 10.0.35.3" \
	route_VM4VM1="-net 10.0.12.0/24 10.0.45.4" \
	route_VM4VM2="-net 10.0.24.0/24 10.0.45.4" \
	ipv6_static_routes="VM3VM1 VM3VM2 VM4VM1 VM4VM2" \
	ipv6_route_VM3VM1="2001:db8:12:: -prefixlen 64 2001:db8:35::3" \
	ipv6_route_VM3VM2="2001:db8:23:: -prefixlen 64 2001:db8:35::3" \
	ipv6_route_VM4VM1="2001:db8:12:: -prefixlen 64 2001:db8:45::4" \
	ipv6_route_VM4VM2="2001:db8:24:: -prefixlen 64 2001:db8:45::4"
sed -i '' -e '/net.inet.ip.redirect=0/d' /etc/sysctl.conf
sed -i '' -e '/net.inet6.ip6.redirect=0/d' /etc/sysctl.conf
sysctl net.inet.ip.redirect=1
sysctl net.inet6.ip6.redirect=1
service hostname restart
service netif restart
service routing restart
config save
}

ecmp_vm6 () {
sysrc hostname=VM6 \
	gateway_enable=NO \
	ipv6_gateway_enable=NO \
	ifconfig_vtnet4="inet 10.0.56.6/24" \
	ifconfig_vtnet4_alias1="inet 10.0.56.16/32" \
	ifconfig_vtnet4_alias2="inet 10.0.56.26/32" \
	ifconfig_vtnet4_alias3="inet 10.0.56.36/32" \
	ifconfig_vtnet4_alias4="inet 10.0.56.46/32" \
	ifconfig_vtnet4_alias5="inet 10.0.56.56/32" \
	ifconfig_vtnet4_ipv6="inet6 2001:db8:56::6 prefixlen 64" \
	ifconfig_vtnet4_alias61="inet6 2001:db8:56::16 prefixlen 64" \
	ifconfig_vtnet4_alias62="inet6 2001:db8:56::26 prefixlen 64" \
	ifconfig_vtnet4_alias63="inet6 2001:db8:56::36 prefixlen 64" \
	ifconfig_vtnet4_alias64="inet6 2001:db8:56::46 prefixlen 64" \
	ifconfig_vtnet4_alias65="inet6 2001:db8:56::56 prefixlen 64" \
	defaultrouter="10.0.56.5" \
	ipv6_defaultrouter="2001:db8:56::5"
service hostname restart
service netif restart
service routing restart
config save
}

fairshape_vm1 () {
sysrc hostname=VM1 \
  gateway_enable=no \
  ipv6_gateway_enable=no \
  ifconfig_vtnet4="DHCP" \
  ifconfig_vtnet4_ipv6="inet6 accept_rtadv" \
  rtsold_enable="YES"
service hostname restart
service netif restart
service routing restart
service rtsold start
config save
}

fairshape_vm2 () {
sysrc hostname=VM2 \
   gateway_enable=no \
   ipv6_gateway_enable=no \
   ifconfig_vtnet4="DHCP" \
   ifconfig_vtnet4_ipv6="inet6 accept_rtadv" \
   rtsold_enable="YES"
service hostname restart
service netif restart
service routing restart
service rtsold start
config save
}

fairshape_vm3 () {
sysrc hostname=VM3 \
  gateway_enable=no \
  ipv6_gateway_enable=no \
  ifconfig_vtnet4="DHCP" \
  ifconfig_vtnet4_ipv6="inet6 accept_rtadv" \
  rtsold_enable="YES"
service hostname restart
service netif restart
service routing restart
service rtsold start
config save
}

fairshape_vm4 () {
sysrc hostname=VM4 \
  ifconfig_vtnet4="10.0.0.4/24" \
  ifconfig_vtnet4_ipv6="inet6 2001:db8::4/64" \
  ifconfig_vtnet3="10.0.5.4/24" \
  ifconfig_vtnet3_ipv6="inet6 2001:db8:5::4/64" \
  rtadvd_enable=yes \
  rtadvd_interfaces=vtnet4 \
  dhcpd_enable=YES \
  dhcpd_flags="-q" \
  dhcpd_conf="/usr/local/etc/dhcpd.conf" \
  dhcpd_ifaces="vtnet4" \
  firewall_enable=YES \
  firewall_script="/etc/ipfw.rules"

cat > /usr/local/etc/dhcpd.conf <<EOF
option domain-name "bsdrp.net";
default-lease-time 600;
max-lease-time 7200;
ddns-update-style none;
subnet 10.0.5.0 netmask 255.255.255.0 {
}
subnet 10.0.0.0 netmask 255.255.255.0 {
  range 10.0.0.1 10.0.0.3;
  option routers 10.0.0.4;
}
EOF

cat > /etc/ipfw.rules <<EOF
#!/bin/sh
fwcmd="/sbin/ipfw"
if ! kldstat -q -m dummynet; then
        kldload dummynet
fi
# Flush out the list before we begin.
\${fwcmd} -f flush
oif=vtnet3              # Output interface
bwu=50Mbit/s    # Maximum upload speed
bwd=100Mbit/s   # Maximum download speed
# Declare hard-limit of our links (2 because bidirectional)
\${fwcmd} pipe 1 config bw \$bwu
\${fwcmd} pipe 2 config bw \$bwd
# per-ip fair queueing
\${fwcmd} queue 1 config pipe 1 mask src-ip 0xffffffff
\${fwcmd} queue 2 config pipe 2 mask dst-ip 0xffffffff
# Assing outgoing traffic to upload queue and incoming to download queue
\${fwcmd} add queue 1 ip from any to any xmit \$oif out
\${fwcmd} add queue 2 ip from any to any recv \$oif in
# We don't want to block traffic, only shape some
\${fwcmd} add 3000 allow ip from any to any
EOF

service hostname restart
service netif restart
service routing restart
service isc-dhcpd start
service rtadvd start
service ipfw start
config save
}

fairshape_vm5 () {
sysrc hostname=R5 \
  gateway_enable=no \
  ipv6_gateway_enable=no \
  ifconfig_vtnet3="10.0.5.5/24" \
  ifconfig_vtnet3_ipv6="inet6 2001:db8:5::5/64" \
  defaultrouter="10.0.5.4" \
  ipv6_defaultrouter="2001:db8:5::4"
service hostname restart
service netif restart
service routing restart
}

freevrrpd_vm1() {
sysrc hostname=R1 \
  ifconfig_vtnet3="inet 192.168.1.1/24" \
  ifconfig_vtnet4="inet 192.168.2.1/24" \
  freevrrpd_enable=YES
cat <<EOF > /usr/local/etc/freevrrpd.conf
[VRID]
serverid = 1
interface = vtnet3
# This router is the master
priority = 101
addr = 192.168.1.254/24
# We want that this state is dependant with the state of vrid 2
vridsdep = 2
password = vrid1

[VRID]
serverid = 2
interface = vtnet4
# This router is the master
priority = 101
addr = 192.168.2.254/24
password = vrid2
# We want that this state is dependant with the state of vrid 1
vridsdep = 1
EOF
service hostname restart
service netif restart
service freevrrpd start
config save
}

freevrrpd_vm2() {
sysrc hostname=R2 \
  ifconfig_vtnet3="inet 192.168.1.2/24" \
  ifconfig_vtnet4="inet 192.168.2.2/24" \
  freevrrpd_enable=YES
cat <<EOF > /usr/local/etc/freevrrpd.conf
[VRID]
serverid = 1
interface = vtnet3
# This router is the backup
priority = 100
addr = 192.168.1.254/24
# We want that this state is dependant with the state of vrid 2
vridsdep = 2
password = vrid1

[VRID]
serverid = 2
interface = vtnet4
# This router is the backup
priority = 100
addr = 192.168.2.254/24
password = vrid2
# We want that this state is dependant with the state of vrid 1
vridsdep = 1
EOF
service hostname restart
service netif restart
service freevrrpd start
config save
}

freevrrpd_vm3() {
sysrc hostname=R3 \
  ifconfig_vtnet3="inet 192.168.1.3/24" \
  defaultrouter="192.168.1.254" \
  gateway_enable=NO \
  ipv6_gateway_enable=NO
service hostname restart
service netif restart
service routing restart
config save
}

freevrrpd_vm4() {
sysrc hostname=R4 \
  ifconfig_vtnet4="inet 192.168.2.4/24" \
  defaultrouter="192.168.2.254" \
  gateway_enable=NO \
  ipv6_gateway_enable=NO
service hostname restart
service netif restart
service routing restart
config save
}
### Main

[ $# -lt 1 ] && usage

$1
