#!/bin/sh
#
# Post-upgrade fixup tool for BSD Router Project
# https://bsdrp.net
#
# Copyright (c) 2009-2025, The BSDRP Development Team
# All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

set -eu

# A usefull function (from: http://code.google.com/p/sh-die/)
die() { echo -n "EXIT: " >&2; echo "$@" >&2; exit 1; }

[ $# -lt 1 ] && die "ERROR: This script should be call by sbin/upgrade"

DST=$1		# DST=/dev/ufs/BSDRPs2

mount_newpart () {
	if [ ! -d /tmp/sysupgrade ]; then
    	mkdir /tmp/sysupgrade
		if ! mount ${DST} /tmp/sysupgrade; then
			echo "ERROR: Can't mount new partition"
			rm -r /tmp/sysupgrade || echo "and can't clean /tmp/sysupgrade"
    		exit 1
		fi
	fi
}

umount_newpart () {
	if mount | grep -q "${DST} on /tmp/sysupgrade"; then
		umount /tmp/sysupgrade || die "ERROR: Can't umount new partition"
		rm -r /tmp/sysupgrade || echo "WARNING: Can't remove tempdir"
	fi
}

version=$(cat /etc/version)

# If upgrading an old nanobsd based on MBR, then new GPT image doesnâ€™t include:
# 1. BSD disklabel
# 2. BSD bootloader
# But the MBR boot loader requieres those, so we need to reinstall them.

if grep -q 'ufs/' /etc/nanobsd.conf; then
	stripped_dst=${DST#/dev/}
	part=$(glabel status | grep ${stripped_dst} | awk '{print $3; }')
	if [ -c /dev/${part} ]; then
		# Overwritting partition will not delete the contents
		gpart create -s bsd /dev/${part}
		gpart add -t freebsd-ufs -b 0 /dev/${part}
		gpart bootcode -b /boot/boot /dev/${part}
	else
		die "BUG in post-upgrade script, /dev/${part} is not a partition"
	fi
fi

# Check if /etc/fstab contains special directories (
CFG_UMOUNT=true
if ! grep -q fdesc /etc/fstab; then
	if mount | ! grep -q "/cfg"; then
		mount /cfg || die "cannot mount /cfg"
	else
		CFG_UMOUNT=false
	fi
	(
	echo "fdesc   /dev/fd         fdescfs         rw      0       0"
	echo "proc    /proc           procfs          rw      0       0"
	) >> /cfg/fstab
	cp /cfg/fstab /etc/ || die "Cannot copy patched /cfg/fstab into /etc"
	if (${CFG_UMOUNT}); then
		umount /cfg || true
	fi
fi

# If we need to add new users (because local /etc/master.passw was modified by just changing the root password, the new one will be ignored)
#   echo 'blablalba' >> /etc/master.passwd
#   pwd_mkdb -C /etc/master.passwd && pwd_mkdb -p /etc/master.passwd || die "error"
#   config save

exit 0
