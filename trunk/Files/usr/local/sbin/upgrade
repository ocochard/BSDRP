#!/bin/sh
#
# Upgrade tool for BSD Router Project
# http://bsdrp.net
#
# Copyright (c) 2009-2010, The BSDRP Development Team
# All rights reserved.
# Based on the updatep1 and updatep2 script of nanoBSD
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#

#######################
##  Example of Usage ##
#######################	

# Put the bziped _.disk.image on my-server, in the  home dir of my-user,
# and from the nanoBSD device, enter this command:
# ssh my-user@my-server cat _.disk.image.bz2 | bzcat | upgrade
# ssh my-user@my-server cat _.disk.image.xz | xzcat | upgrade

# Strict script
set -e
set -u

ARCH=`uname -m`

if [ "${ARCH}" = "sparc64" ]; then
	echo "ERROR: upgrade script not adapted to ${ARCH}"
	exit 1
fi

# Get the NANO_GLABEL_SYS variable
# (get the name from mount output, and remove the last character)
NANO_GLABEL_SYS=`mount | grep " / " | cut -d'/' -f4 | cut -d' ' -f1 | sed 's/\(.*\)./\1/'`
# Get the NANO_GLABEL_SYS_FULL variable
# (kept the last 1 or 2 number)
NANO_GLABEL_SYS_FULL=`mount | grep " / " | cut -d'/' -f4 | cut -d' ' -f1`

# Get the disk name using its label
NANO_DRIVE=`glabel status | grep ufs/${NANO_GLABEL_SYS_FULL} | awk '{print $3}' | cut -d's' -f1`

# Get the full disk name
NANO_FULLDRIVE=`glabel status | grep ufs/${NANO_GLABEL_SYS_FULL} | awk '{print $3}'`

# Check and set final variable
DST_SLICE=0

if [ `echo $NANO_FULLDRIVE | /usr/bin/grep "s1"` ]; then 
	DST_SLICE=2
	SRC_SLICE=1
fi
if [ `echo $NANO_FULLDRIVE | /usr/bin/grep "s2"` ]; then                
    DST_SLICE=1
	SRC_SLICE=2
fi

if [ $DST_SLICE = 0 ]; then
	echo "Can't detect active slice"
	exit 1
fi

# Blow away old system.
if ! dd if=/dev/zero of=/dev/${NANO_DRIVE}s${DST_SLICE} bs=1m count=1 > /dev/null 2>&1; then
	echo "ERROR: Can't initialize destination partition"
	exit 1
fi

# Copy in new system
if ! dd of=/dev/${NANO_DRIVE}s${DST_SLICE} obs=64k; then
	echo "ERROR: Can't install the upgrade on /dev/${NANO_DRIVE}s${DST_SLICE}"
	exit 1
fi

# Check that it worked
if ! fsck_ffs -n /dev/${NANO_DRIVE}s${DST_SLICE}a; then
	echo "ERROR: New file system check failed"
	exit 1
fi

# Set Label into the new slice
if ! tunefs -L ${NANO_GLABEL_SYS}${DST_SLICE} /dev/${NANO_DRIVE}s${DST_SLICE}a; then
	echo "ERROR: Can't put label on the new filesystem"
	exit 1
fi

# Need to compare some files between the old and new partition
if [ ! -d /tmp/sysupgrade ]; then
	mkdir /tmp/sysupgrade
fi

if ! mount /dev/ufs/${NANO_GLABEL_SYS}${DST_SLICE} /tmp/sysupgrade; then
	echo "ERROR: Can't mount new upgrade image"
	exit 1
fi
# 	Adapt fstab of the new system
for f in /tmp/sysupgrade/etc/fstab /tmp/sysupgrade/conf/base/etc/fstab /etc/fstab
	do
	    sed -i "" "s/${NANO_GLABEL_SYS}${SRC_SLICE}/${NANO_GLABEL_SYS}${DST_SLICE}/g" $f
    done
#	Compare the loader.conf, and include the diff into the new partition
#	This file is for example, modified with "system virtualized"
if ! diff -ruN /tmp/sysupgrade/boot/loader.conf /boot/loader.conf > /tmp/loader.conf.patch; then
	if patch -s /tmp/sysupgrade/boot/loader.conf /tmp/loader.conf.patch; then
		echo "WARNING: Can't patch upgraded /boot/loader.conf"
		echo "YOU NEED to re-adapbt your /boot/loader.conf manually"
	fi
fi

#	Check if their is a post-upgrade script on the newimage (This script will be start at the end of the upgrade process)
if [ -f /tmp/sysupgrade/usr/local/sbin/post-upgrade.sh ]; then
	if ! cp /tmp/sysupgrade/usr/local/sbin/post-upgrade.sh /tmp/post-upgrade.sh; then
		echo "WARNING: Can't copy post-upgrade script!"
	fi
fi

if ! umount /tmp/sysupgrade; then
	echo "ERROR: Can't umount new image"
	exit 1
fi 

if ! rm -r /tmp/sysupgrade; then
	echo "WARNING: Can't remove tempdir"
fi

# Save the config file that include the fstab
# Don't know if it's usefull
if ! mount /cfg; then
	echo "ERROR: Cant't mount /cfg"
	exit 1
fi
if ! cp /etc/fstab /cfg; then
	echo "ERROR: Can't save fstab"
	umount /cfg
	exit 1
fi
if ! umount /cfg; then
	echo "ERROR: Can't umount /cfg"
	exit 1
fi

case "${ARCH}" in
        i386|amd64)
                NANO_KERNEL="BSDRP-I386"
				if ! boot0cfg -s ${DST_SLICE} -t 18 -v ${NANO_DRIVE}; then
					echo "ERROR: Can't update FreeBSD bootloader"
					exit 1
				fi
				if ! gpart set -a active -i ${DST_SLICE} ${NANO_DRIVE}; then
					echo "ERROR: Can't update active partition"
					exit 1
				fi
                ;;
        arm)
				echo "arm upgrade script not tested!"	
				if ! gpart set -a active -i ${DST_SLICE} ${NANO_DRIVE}; then
					echo "ERROR: Can't update active partition"
					exit 1
				fi
                ;;
        sparc64)
                echo "You need to configure OBP for booting on"
                ;;
esac

# Log
logger BSDRP Upgrade complete

if [ -f /tmp/post-upgrade.sh ]; then
	logger Starting pre-upgrade script
	chmod +x /tmp/post-upgrade.sh
	/tmp/post-upgrade.sh
fi
