--- usr.sbin/bsnmpd/modules/snmp_hostres/hostres_storage_tbl.c.orig	2013-03-21 13:42:16.000000000 +0700
+++ usr.sbin/bsnmpd/modules/snmp_hostres/hostres_storage_tbl.c	2013-03-21 14:15:51.000000000 +0700
@@ -442,7 +442,9 @@
 storage_OS_get_fs(void)
 {
 	struct storage_entry *entry;
-	uint64_t used_blocks_count = 0;
+	uint64_t block_size = 0;
+	uint64_t free_blocks_count = 0;
+	uint64_t total_blocks_count = 0;
 	char fs_string[SE_DESC_MLEN];
 	int mounted_fs_count;
 	int i = 0;
@@ -473,6 +475,8 @@
 	fs_tbl_pre_refresh();
 
 	for (i = 0; i < mounted_fs_count; i++) {
+		int shift = 0;
+
 		snprintf(fs_string, sizeof(fs_string),
 		    "%s, type: %s, dev: %s", fs_buf[i].f_mntonname,
 		    fs_buf[i].f_fstypename, fs_buf[i].f_mntfromname);
@@ -488,23 +492,22 @@
 		entry->flags |= HR_STORAGE_FOUND;
 		entry->type = fs_get_type(&fs_buf[i]); /*XXX - This is wrong*/
 
-		if (fs_buf[i].f_bsize > INT_MAX)
-			entry->allocationUnits = INT_MAX;
-		else
-			entry->allocationUnits = fs_buf[i].f_bsize;
-
-		if (fs_buf[i].f_blocks > INT_MAX)
-			entry->size = INT_MAX;
-		else
-			entry->size = fs_buf[i].f_blocks;
-
-		used_blocks_count = fs_buf[i].f_blocks - fs_buf[i].f_bfree;
-
-		if (used_blocks_count > INT_MAX)
-			entry->used = INT_MAX;
-		else
-			entry->used = used_blocks_count;
 
+		total_blocks_count = fs_buf[i].f_blocks;
+		block_size = fs_buf[i].f_bsize;
+		free_blocks_count = fs_buf[i].f_bfree;
+
+		while (total_blocks_count > INT_MAX) {
+			total_blocks_count >>= 1;
+			shift++;
+		}
+		if (shift) {
+			block_size <<= shift;
+			free_blocks_count >>= shift;
+		}
+		entry->size = total_blocks_count;
+		entry->allocationUnits = block_size;
+		entry->used = total_blocks_count - free_blocks_count;
 		entry->allocationFailures = 0;
 
 		/* take care of hrFSTable */