# TODO List fort the BSD Router Project
## Bugs #

* if no-mandatory /data had a fsck problem, system refuse go in single user
* add auto-trimming of all log files that are being created

## Arch #

* NEED to merge lot's of common task of create_arch_diskimage() in nanobsd

## Boot loader ##
* FreeBSD boot0 (sys/boot/i386/boot0) is highly optimized ASM code and use int 0x14 for COM port access (limited to 9600 bauds).
    => Is possible to use UART in place for highly baud rate ? 
* How to add UEFI bootloader ? (available on -current), because some x86_64 machine didn't have UEFI compability (PC Engine APU)
* Using GPT partition in place of MBR ?

## Authentication #

* Need to test PAM (Radius, TACAS+) modules

## Multicast #

* Need to found IPv4 PIM-dm/sm daemon and test them

## misc #

* Is utf-8 support for console usefull ?
* Quagga rc script: limit all quagga process message when quagga is disabled
* Need to publish an OVF (Open Virtualization Format) tar file
* A netgraph documentation "for dummies" like this: http://nexus.org.ua/weblog/message/406/

## Central configuration management / Provisionning #

* Use cvs/subversion/others for maintain central management of configuration files
* Be compatible with a provisionning tools that generate lot's of configuration (subversion copy?)
* Need to check RANCID integration
* Need to study NETCONF support

## Performance #

* In place of tunning, need to add a script that check the hardware, and regarding the hardware (NIC drivers, ncpu, RAM, etc...) will display some advice
* Need to check CPU affinity for routing process and forwarding process (cpuset)
  like this script:
==============
#!/bin/sh

# PROVIDE: cpuset-igb
# REQUIRE: FILESYSTEMS
# BEFORE:  netif
# KEYWORD: nojail

case "$1" in
*start)
  echo "Binding igb(4) IRQs to CPUs"
  cpus=`sysctl -n kern.smp.cpus`
  vmstat -ai | sed -E '/^irq.*que/!d; s/^irq([0-9]+): igb([0-9]+):que ([0-9]+).*/\1 \2 \3/' |\
  while read irq igb que
  do
    cpuset -l $(( ($igb+$que) % $cpus )) -x $irq
  done
  ;;
esac
===============

## API #

* Need to check if an API (for usage as a VM in cloud for example) is a good idea
* Netconf: Need to check this BSD licensed:http://www.yumaworks.com/products/yuma/

## labs #

* PAM: tacacs+, radius, ldap, etc
* Lab script: Generate a lab diagram in DOT language, see example in tools/bsdrp.lab.gv

## nanobsd patches to study for inclusion # 

http://lists.freebsd.org/pipermail/freebsd-embedded/2012-June/001580.html
