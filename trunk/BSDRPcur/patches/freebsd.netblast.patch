--- tools/tools/netrate/netblast/netblast.c.orig	2013-01-09 08:46:00.000000000 +0100
+++ tools/tools/netrate/netblast/netblast.c	2013-01-09 08:49:00.000000000 +0100
@@ -65,7 +65,7 @@
  * the higher the relative overhead.
  */
 static int
-blast_loop(int s, long duration, u_char *packet, u_int packet_len)
+blast_loop(int s, long duration, u_char *packet, u_int packet_len, int family)
 {
 	struct timespec starttime, tmptime;
 	struct itimerval it;
@@ -131,10 +131,18 @@
 	    tmptime.tv_nsec);
 	printf("send calls:        %d\n", send_calls);
 	printf("send errors:       %d\n", send_errors);
+	printf("send success:      %d\n", send_calls - send_errors);
 	printf("approx send rate:  %ld\n", (send_calls - send_errors) /
 	    duration);
 	printf("approx error rate: %d\n", (send_errors / send_calls));
-
+	printf("approx throughput: ");
+	if (family == AF_INET)
+		printf("%ld Mib/s\n", ((send_calls - send_errors) / duration ) *
+		(packet_len + 8 + 20 + 14 ) * 8 / 1000 / 1000);
+	else if (family == AF_INET6)
+		printf("%ld Mib/s\n", ((send_calls - send_errors) / duration ) *
+		(packet_len + 8 + 40 + 14 ) * 8 / 1000 / 1000);
+	else printf("CAN 'T DETERMINE family type %i\n",family);
 	return (0);
 }
 
@@ -216,6 +224,6 @@
 
 	freeaddrinfo(res0);
 
-	return (blast_loop(s, duration, packet, payloadsize));
+	return (blast_loop(s, duration, packet, payloadsize,res->ai_family));
 
 }
